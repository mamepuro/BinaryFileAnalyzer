// Generated by Rec Studio 4 - build Sep 19 2015

L004011A0()
{
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr* _t11;                        // _t11
    intOrPtr* _t13;                        // _t13
    intOrPtr _t20;                         // _t20

    _t11 = ___dyn_tls_init_callback;
    if(_t11 != 0) {
        _v20 = 0;
        _v24 = 2;
         *__esp = 0;
         *_t11();
        __esp = __esp - 12;
    }
     *__esp = 4198400;
    _SetUnhandledExceptionFilter$4();
    __esp = __esp - 4;
    ___cpu_features_init(__ecx);
    _fesetenv(__CRT_fenv);
    __setargv();
    _t13 = __CRT_fmode;
    if(_t13 != 0) {
L4:
        _t20 = __imp___iob;
         *((intOrPtr*)(__esp + 4)) = _t13;
        __fmode = _t13;
         *__esp =  *((intOrPtr*)(_t20 + 16));
        __setmode();
         *((intOrPtr*)(__esp + 4)) = __CRT_fmode;
         *__esp =  *((intOrPtr*)(_t20 + 48));
        __setmode();
         *((intOrPtr*)(__esp + 4)) = __CRT_fmode;
        _t13 =  *((intOrPtr*)(_t20 + 80));
         *__esp = _t13;
        __setmode();
        goto L3;
    } else {
L3:
        ___p__fmode();
         *_t13 = __fmode;
        __pei386_runtime_relocator(_t20, __edi, __esi);
        __esp = __esp & -16;
        ___main();
        ___p__environ();
        _v28 =  *_t13;
         *((intOrPtr*)(__esp + 4)) = __argv;
        _t13 = __argc;
         *__esp = _t13;
        _main();
        __cexit();
         *__esp = _t13;
        _ExitProcess$4();
        goto L4;
    }
}

L00401290()
{
    char _v16;                             // _cfa_fffffff0
    char _v20;                             // _cfa_ffffffec
    char* _v44;                            // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    char* _v52;                            // _cfa_ffffffcc
    intOrPtr* _v56;                        // _cfa_ffffffc8

    _v56 =  &__argv;
    _v44 =  &_v16;
     *__esp =  &__argc;
    _v16 = 0;
    _v48 = __CRT_glob & 1;
    _v52 =  &_v20;
    ___getmainargs();
    return  &_v20;
}

int atexit(_Unknown_base(*)()* __func)
{// addr = 0x00401310
    goto __imp__atexit;
}

int _bar(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00401410
    intOrPtr _v24;                         // _cfa_ffffffe8

    _v24 = _a4;
    return _printf("bar is %d");
}

_foo(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{// addr = 0x0040142C
    intOrPtr _v16;                         // _cfa_fffffff0

    _v16 = _a8 + _a4;
    _bar(_v16);
    return _v16;
}

_main()
{// addr = 0x0040144D
    intOrPtr _v8;                          // _cfa_fffffff8
    intOrPtr _v32;                         // _cfa_ffffffe0 (outparam)

    __esp = __esp & -16;
    __esp = __esp - 32;
    ___main();
    _v8 = _foo(1, 2);
    _v32 = _v8;
    _printf("foo is %d");
    return 0;
}

signed int __setargv()
{// addr = 0x00401490
    char _v16;                             // _cfa_fffffff0
    signed int _v32;                       // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    char _v44;                             // _cfa_ffffffd4
    intOrPtr _v48;                         // _cfa_ffffffd0
    signed int _v52;                       // _cfa_ffffffcc
    signed int _v56;                       // _cfa_ffffffc8
    signed int _v60;                       // _cfa_ffffffc4
    signed int _v64;                       // _cfa_ffffffc0
    signed int* _v68;                      // _cfa_ffffffbc
    char _v76;                             // _cfa_ffffffb4
    signed int _v80;                       // _cfa_ffffffb0 (outparam)
    signed int _v84;                       // _cfa_ffffffac (outparam)
    signed int _v88;                       // _cfa_ffffffa8 (outparam)
    signed int _v112;                      // _cfa_ffffff90
    signed int _v116;                      // _cfa_ffffff8c
    signed int __ebx;                      // r1
    signed int __esi;                      // r5
    signed int _t91;                       // _t91
    intOrPtr _t102;                        // _t102
    signed int _t103;                      // _t103
    signed int _t109;                      // _t109
    intOrPtr _t113;                        // _t113
    _unknown_ _t114;                       // _t114
    _unknown_ _t115;                       // _t115
    signed int _t116;                      // _t116
    signed int _t117;                      // _t117
    signed char _t119;                     // _t119
    signed char _t121;                     // _t121
    signed int _t126;                      // _t126
    signed int _t127;                      // _t127
    signed int _t128;                      // _t128
    signed int _t129;                      // _t129
    _unknown_ _t131;                       // _t131
    signed int _t132;                      // _t132
    signed int _t134;                      // _t134
    _unknown_ _t136;                       // _t136
    signed int _t137;                      // _t137
    _unknown_ _t138;                       // _t138
    signed int _t139;                      // _t139
    signed int _t140;                      // _t140
    _unknown_ _t141;                       // _t141

    _push(_t141);
    _push(_t131);
    _push(_t136);
    _push(_t115);
    __esp = __esp - 76;
    __eflags = __CRT_glob & 2;
    if((__CRT_glob & 2) != 0) {
        _GetCommandLineA$0();
        _v68 = __esp;
         *__esp = _t91;
        _t116 = _t91;
        __esp = __esp - ___chkstk_ms(_strlen() + _t92 + 17 >> 4 << 4);
        _v32 = 0;
        _t132 =  *_t116;
        _t137 =  &_v76;
        _v60 =  &_v76;
        _v64 = __CRT_glob & 17408 | 16;
        _t117 = _t132;
        _v48 = _t116 + 1;
        __eflags = _t132;
        if(_t132 == 0) {
L19:
            __argc = _v40;
            _t102 = _v36;
            __argv = _t102;
            __esp = _v68;
            __esp =  &_v16;
            _pop(__ebx);
            _pop(__esi);
            _pop(__edi);
            _pop(__ebp);
            return _t102;
        } else {
            _v56 = 0;
            _t103 =  &_v76;
            _t127 = 0;
            __eflags = 0;
            _v52 = 0;
            do {
                __eflags = _t117 - 63;
                if(_t117 > 63) {
                    __eflags = _t117 - 90;
                    if(_t117 <= 90) {
                        goto L6;
                    } else {
                        _t119 = _t117 - 91;
                        __eflags = _t119 - 36;
                        if(_t119 > 36) {
                            goto L6;
                        } else {
                            switch( *((intOrPtr*)((_t119 & 255) * 4 +  &M004050D0))) {
                                case 0:
                                    __esi = __edx - 1;
                                    __eflags = __CRT_glob & 32;
                                    if((__CRT_glob & 32) != 0) {
                                        goto L33;
                                    } else {
                                        __ecx = 1;
                                        __eflags = __edx;
                                        if(__edx != 0) {
                                            goto L34;
                                        } else {
                                            __edx = __eax;
                                            goto L37;
                                        }
                                    }
                                    goto L78;
                                case 1:
                                    __eflags = _v52 - 39;
                                    if(_v52 == 39) {
                                         *_t103 = 92;
                                        _t103 = _t103 + 1;
                                    } else {
                                        _t127 = _t127 + 1;
                                    }
                                    goto L24;
                                case 2:
                                    goto L6;
                                case 3:
                                    goto L32;
                                case 4:
                                    _push(__esi);
                                    _push(__ebx);
                                    __esp = __esp - 20;
                                    __eflags = __CRT_MT - 2;
                                    __eax = _v84;
                                    if(__CRT_MT != 2) {
                                        __CRT_MT = 2;
                                    }
                                    __eflags = __eax - 2;
                                    if(__eax == 2) {
                                        4231188 = 0;
                                        __esi = 4231188;
                                        __esi = 4231188 >> 2;
                                        __eflags = 0;
                                        if(0 <= 0) {
                                            goto L70;
                                        } else {
                                            __ebx = 0;
                                            __eflags = 0;
                                            do {
                                                __eax =  *(4231188 + __ebx * 4);
                                                __eflags = __eax;
                                                if(__eax != 0) {
                                                     *__eax();
                                                }
                                                __ebx = __ebx + 1;
                                                __eflags = __esi - __ebx;
                                            } while(__esi > __ebx);
                                            __esp =  &(__esp[5]);
                                            __eax = 1;
                                            _pop(__ebx);
                                            _pop(__esi);
                                            return 1;
                                        }
                                    } else {
                                        __eflags = __eax - 1;
                                        if(__eax == 1) {
                                            __eax = _v80;
                                            _v116 = 1;
                                            _v112 = _v80;
                                            __eax = _v88;
                                             *__esp = _v88;
                                            ___mingw_TLScallback();
                                            __esp =  &(__esp[5]);
                                            __eax = 1;
                                            _pop(__ebx);
                                            _pop(__esi);
                                            return 1;
                                        } else {
L70:
                                            __esp =  &(__esp[5]);
                                            __eax = 1;
                                            _pop(__ebx);
                                            _pop(__esi);
                                            return 1;
                                        }
                                    }
                                    goto L78;
                            }
                        }
                    }
                } else {
                    __eflags = _t117 - 33;
                    if(_t117 > 33) {
                        _t121 = _t117 - 34;
                        __eflags = _t121 - 29;
                        if(__eflags > 0) {
                            goto L6;
                        } else {
                            switch( *((intOrPtr*)((_t121 & 255) * 4 +  &M00405058))) {
                                case 0:
                                    __ecx = __edx;
                                    __ecx = __edx >> 1;
                                    if(__eflags == 0) {
                                        __ecx = __eax;
                                    } else {
                                        __ecx = __ecx + __eax;
                                        __eflags = __ecx;
                                        do {
                                            __eax = __eax + 1;
                                             *(__eax - 1) = 92;
                                            __eflags = __eax - __ecx;
                                        } while(__eax != __ecx);
                                    }
                                    __eflags = _v52 - 39;
                                    if(_v52 == 39) {
L59:
                                         *__ecx = 34;
                                        __eax = __ecx + 1;
                                        __edx = 0;
                                        _v56 = 1;
                                    } else {
                                        __edx = __edx & 1;
                                        __eflags = __edx;
                                        if(__edx != 0) {
                                            goto L59;
                                        } else {
                                            _v52 = _v52 ^ 34;
                                            __eax = __ecx;
                                            __edx = 0;
                                            _v56 = 1;
                                        }
                                    }
                                    goto L24;
                                case 1:
                                    goto L6;
                                case 2:
                                    __eflags = __CRT_glob & 16;
                                    if(__eflags == 0) {
                                        goto L6;
                                    } else {
                                        __ecx = __edx;
                                        __ecx = __edx >> 1;
                                        if(__eflags == 0) {
                                            __ecx = __eax;
                                        } else {
                                            __ecx = __ecx + __eax;
                                            __eflags = __ecx;
                                            do {
                                                __eax = __eax + 1;
                                                 *(__eax - 1) = 92;
                                                __eflags = __eax - __ecx;
                                            } while(__eax != __ecx);
                                        }
                                        __eflags = _v52 - 34;
                                        if(_v52 == 34) {
L44:
                                             *__ecx = 39;
                                            __eax = __ecx + 1;
                                            __edx = 0;
                                            _v56 = 1;
                                        } else {
                                            __edx = __edx & 1;
                                            __eflags = __edx;
                                            if(__edx == 0) {
                                                _v52 = _v52 ^ 39;
                                                __eax = __ecx;
                                                __edx = 0;
                                                _v56 = 1;
                                            } else {
                                                goto L44;
                                            }
                                        }
                                    }
                                    goto L24;
                                case 3:
L32:
                                    _t139 = _t127 - 1;
L33:
                                    _t132 - 127 = _v52;
                                    _t126 = _v52 != 0 | _t132 == 127;
                                    __eflags = _t127;
                                    if(_t127 == 0) {
                                        _t129 = _t103;
                                    } else {
L34:
                                        _t129 = _t103 + _t139 + 1;
                                        do {
                                            _t103 = _t103 + 1;
                                             *(_t103 - 1) = 92;
                                            __eflags = _t103 - _t129;
                                        } while(_t103 != _t129);
                                    }
                                    _t137 = _t129;
                                    __eflags = _t126;
                                    if(_t126 != 0) {
L37:
                                         *_t129 = 127;
                                        _t137 = _t129 + 1;
                                    }
                                    goto L23;
                            }
                        }
                    } else {
L6:
                        _t138 = _t103 + _t127;
                        __eflags = _t127;
                        if(_t127 == 0) {
                            _t137 = _t103;
                        } else {
                            do {
                                _t103 = _t103 + 1;
                                 *(_t103 - 1) = 92;
                                __eflags = _t103 - _t138;
                            } while(_t103 != _t138);
                        }
                        __eflags = _v52;
                        if(_v52 != 0) {
L23:
                             *_t137 = _t117;
                            _t103 = _t137 + 1;
                            _t127 = 0;
                            __eflags = 0;
                        } else {
                            _t109 = __imp____mb_cur_max;
                            __eflags =  *_t109 - 1;
                            if( *_t109 != 1) {
                                _v88 = 64;
                                 *__esp = _t132;
                                __isctype();
                                __eflags = _t109;
                                if(_t109 != 0) {
                                    goto L12;
                                } else {
                                    goto L21;
                                }
                            } else {
                                _t113 =  *__imp___pctype;
                                __eflags =  *(_t113 + _t132 * 2) & 64;
                                if(( *(_t113 + _t132 * 2) & 64) == 0) {
L21:
                                    __eflags = _t132 - 9;
                                    if(_t132 == 9) {
                                        goto L12;
                                    } else {
                                        goto L23;
                                    }
                                } else {
L12:
                                    __eflags = _v60 - _t137;
                                    if(_v60 < _t137) {
L29:
                                         *_t137 = 0;
                                        _v80 =  &_v44;
                                        _v84 = 0;
                                        _t140 = _v64;
                                        _v88 = _t140;
                                        _t134 = _v60;
                                        _t137 = _t140 | 1;
                                         *__esp = _t134;
                                        ___mingw_glob();
                                        _v64 = _t137;
                                        _t103 = _t134;
                                        _t127 = 0;
                                        _v56 = 0;
                                    } else {
                                        __eflags = _v56;
                                        if(_v56 != 0) {
                                            goto L29;
                                        } else {
                                            _v56 = 0;
                                            _t103 = _t137;
                                            _t127 = 0;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    goto L24;
                }
                goto L78;
L24:
                _v48 = _v48 + 1;
                _t132 =  *((char*)(_v48 - 1));
                _t117 = _t132;
                __eflags = _t132;
            } while(_t132 != 0);
            __eflags = _t127;
            if(_t127 == 0) {
                _t128 = _t103;
                goto L16;
            } else {
                _t128 = _t127 + _t103;
                __eflags = _t128;
                do {
                    _t103 = _t103 + 1;
                     *(_t103 - 1) = 92;
                    __eflags = _t103 - _t128;
                } while(_t103 != _t128);
L16:
                __eflags = _v60 - _t128;
                if(_v60 < _t128) {
L18:
                     *_t128 = 0;
                    ___mingw_glob(_v60, _v64, 0,  &_v44);
                } else {
                    __eflags = _v56;
                    if(_v56 != 0) {
                        goto L18;
                    }
                }
                goto L19;
            }
        }
    } else {
        _t114 = L00401290();
        __esp =  &_v16;
        _pop(__ebx);
        _pop(__esi);
        _pop(__edi);
        _pop(__ebp);
        return _t114;
    }
L78:
}

___cpu_features_init(
    _unknown_ __ecx                        // r2
)
{// addr = 0x00401830
    signed int _v316;                      // _cfa_fffffec4
    _unknown_ __ebx;                       // r1
    signed int _t28;                       // _t28
    signed int _t29;                       // _t29
    intOrPtr* _t32;                        // _t32
    intOrPtr _t33;                         // _t33
    signed int _t36;                       // _t36
    signed int _t39;                       // _t39
    signed int _t41;                       // _t41
    signed int _t42;                       // _t42
    _unknown_ _t44;                        // _t44
    signed int _t45;                       // _t45

    __ecx = __ecx;
    asm("pushfd");
    asm("pushfd");
    _pop(__eax);
    _t42 = _t28;
    _t29 = _t28 ^ 2097152;
    _push(_t29);
    asm("popfd");
    asm("pushfd");
    _pop(__eax);
    asm("popfd");
    if(((_t29 ^ _t42) & 2097152) != 0) {
        _push(_t40);
        asm("cpuid");
        if(0 != 0) {
            if((__ch & 32) != 0) {
                _t36 = _t36 | 128;
            }
            if((_t42 & 128) != 0) {
                _t36 = _t36 | 2;
            }
            if((_t42 & 8388608) != 0) {
                _t36 = _t36 | 4;
            }
            if((_t42 & 16777216) != 0) {
                _t36 = _t36 | 8;
                _push(_t44);
                _t45 = __esp;
                __esp = __esp & -16;
                asm("fxsave [esp]");
                _t41 = _v316;
                _v316 = _v316 ^ 1294558;
                asm("fxrstor [esp]");
                _v316 = _t41;
                asm("fxsave [esp]");
                asm("xchg [esp+0xc8], ebx");
                asm("fxrstor [esp]");
                _t40 = _t41 ^ _v316;
                __esp = _t45;
                _pop(__ebp);
                if((_t41 ^ _v316) == 1294558) {
                    if((_t42 & 33554432) != 0) {
                        _t36 = _t36 | 16;
                    }
                    if((_t42 & 67108864) != 0) {
                        _t36 = _t36 | 32;
                    }
                    if((__cl & 1) != 0) {
                        _t36 = _t36 | 64;
                    }
                }
            }
            ___cpu_features = _t36;
            asm("cpuid");
            if(-2147483648 > -2147483648) {
                asm("cpuid");
                _t39 = 0;
                if(_t42 < 0) {
                    _t39 = 256;
                }
                if((_t42 & 1073741824) != 0) {
                    _t39 = _t39 | 512;
                }
                ___cpu_features = ___cpu_features | _t39;
            }
        }
        _pop(__ebx);
    }
    asm("repe ret");
    0;
    _t32 =  *((intOrPtr*)( *4210704));
    if(_t32 == 0) {
        return;
    } else {
        __esp = __esp - 12;
        do {
             *_t32();
            _t33 =  *4210704;
            _t32 =  *((intOrPtr*)(_t33 + 4));
             *4210704 = _t33 + 4;
        } while(_t32 != 0);
        __esp = __esp + 12;
        return;
    }
}

___main()
{// addr = 0x004019E0
    _unknown_ __ebx;                       // r1
    signed int _t6;                        // _t6
    _unknown_ _t7;                         // _t7
    signed int _t8;                        // _t8

    if( *4223016 == 0) {
         *4223016 = 1;
        _push(_t7);
        __esp = __esp - 24;
        _t8 = ___CTOR_LIST__;
        if(_t8 == -1) {
            _t6 = 0;
            do {
                _t8 = _t6;
                _t6 = _t6 + 1;
            } while( *((intOrPtr*)( &___CTOR_LIST__ + _t6 * 4)) != 0);
        }
        if(_t8 != 0) {
            do {
                ((char*)( &___CTOR_LIST__))[_t8]();
                _t8 = _t8 - 1;
            } while(_t8 != 0);
        }
         *__esp =  &___do_global_dtors;
        atexit();
        __esp = __esp + 24;
        _pop(__ebx);
        return;
    } else {
        return;
    }
}

L00401B10()
{
    intOrPtr* __ebx;                       // r1
    intOrPtr __esi;                        // r5

     *__esp = 4223044;
    _EnterCriticalSection$4();
    __ebx =  *4223036;
    __esp = __esp - 4;
    if(__ebx == 0) {
L6:
         *__esp = 4223044;
        _LeaveCriticalSection$4();
        __esp = __esp - 4;
        return;
    }
    do {
        __eax =  *__ebx;
         *__esp = __eax;
        _TlsGetValue$4();
        __esp = __esp - 4;
        __esi = __eax;
        _GetLastError$0();
        if(__eax == 0 && __esi != 0) {
            __eax =  *((intOrPtr*)(__ebx + 4));
             *__esp = __esi;
             *((intOrPtr*)( *((intOrPtr*)(__ebx + 4))))();
        }
        __ebx = __ebx[2];
    } while(__ebx != 0);
    goto L6;
}

___mingw_TLScallback(
    intOrPtr _a8                           // _cfa_8
)
{// addr = 0x00401C80
    intOrPtr _t2;                          // _t2

    _t2 = _a8;
    if(_t2 == 1) {
        if( *4223040 == 0) {
             *__esp = 4223044;
            _InitializeCriticalSection$4();
            __esp = __esp - 4;
        }
         *4223040 = 1;
        return 1;
    } else {
        if(_t2 == 3) {
            if( *4223040 == 0) {
                goto L3;
            } else {
                L00401B10();
                return 1;
            }
        } else {
            if(_t2 == 0) {
                if( *4223040 != 0) {
                    L00401B10();
                    if( *4223040 == 1) {
                        goto L8;
                    }
                } else {
                    if( *4223040 == 1) {
L8:
                         *__esp = 4223044;
                         *4223040 = 0;
                        _DeleteCriticalSection$4();
                        __esp = __esp - 4;
                    }
                }
            }
L3:
            return 1;
        }
    }
}

signed int L00401D40(
    _unknown_ __ebx,                       // r1
    signed int __ecx,                      // r2
    signed int __edx,                      // r3
    _unknown_ __edi,                       // r4
    _unknown_ __esi,                       // r5
    char* __ebp,                           // r6
    char* _a4,                             // _cfa_4
    void _a8                               // _cfa_8
)
{
    struct _IO_FILE* _v16;   // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec (outparam)
    signed int _v24;                       // _cfa_ffffffe8 (outparam)
    signed int _v76;                       // _cfa_ffffffb4
    signed int _v84;                       // _cfa_ffffffac
    intOrPtr _v92;                         // _cfa_ffffffa4
    signed int _v96;                       // _cfa_ffffffa0
    char* _v100;                           // _cfa_ffffff9c
    char* _v104;                           // _cfa_ffffff98
    signed int _v108;                      // _cfa_ffffff94
    signed int _v112;                      // _cfa_ffffff90
    intOrPtr _v116;                        // _cfa_ffffff8c
    char* _v120;                           // _cfa_ffffff88
    intOrPtr _v124;                        // _cfa_ffffff84
    char* _v128;                           // _cfa_ffffff80
    intOrPtr _v132;                        // _cfa_ffffff7c
    signed int _v156;                      // _cfa_ffffff64
    signed int _v176;                      // _cfa_ffffff50
    signed int _t62;                       // _t62
    signed int _t65;                       // _t65
    intOrPtr _t67;                         // _t67
    _unknown_ _t69;                        // _t69
    signed int _t71;                       // _t71
    intOrPtr _t74;                         // _t74
    signed int _t75;                       // _t75
    signed int _t80;                       // _t80
    _unknown_ _t81;                        // _t81
    signed int _t85;                       // _t85
    struct _IO_FILE* _t87;   // _t87
    signed int _t88;                       // _t88
    intOrPtr* _t89;                        // _t89
    signed int _t92;                       // _t92
    signed int _t94;                       // _t94
    intOrPtr _t99;                         // _t99
    char _t101;                            // _t101
    signed int _t102;                      // _t102
    signed int _t104;                      // _t104
    signed int _t105;                      // _t105
    _unknown_ _t110;                       // _t110

    __ebp = __ebp;
    _push(__esi);
    _push(__ebx);
    __esp = __esp - 20;
    _v20 = 23;
    _t87 = __imp___iob + 64;
    _v24 = 1;
    _v16 = _t87;
     *__esp = "Mingw runtime failure:\n";
    _fwrite();
    _t62 = _vfprintf(_t87, _a4,  &_a8);
    _abort();
    _push(__ebp);
    _push(__edi);
    _t112 = __edx;
    _push( &_a8);
    _t116 = __ecx;
    _push(_t87);
    _t88 = _t62;
    __esp = __esp - 60;
    _v96 = 28;
    _v100 =  &_v84;
     *__esp = _t88;
    _VirtualQuery$12();
    __esp = __esp - 12;
    if( &_v84 == 0) {
        _v108 = _t88;
        L00401D40(_t88, __ecx, __edx, __edx, __ecx, __ebp, "  VirtualQuery failed for %d bytes at address %p", 28);
        _t65 =  *4223068;
        if(_t65 == 0) {
             *4223068 = 1;
            _t65 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__ -  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
            if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 7) {
                goto L16;
            } else {
                _push(__edx);
                _push(__ecx);
                _push(_t88);
                __esp = __esp - 32;
                _t101 = __RUNTIME_PSEUDO_RELOC_LIST_END__;
                if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ > 11) {
                    if(_t101 != 0) {
                        _t89 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                        goto L42;
                    } else {
                        _t65 =  *4216632;
                        _t112 = _t65 |  *4216636;
                        if((_t65 |  *4216636) != 0) {
                            _t89 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                            goto L22;
                        } else {
                            _t101 =  *4216640;
                            _t89 = 4216640;
                            goto L20;
                        }
                    }
                } else {
                    _t89 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
L20:
                    if(_t101 != 0) {
L42:
                        if(_t89 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                            goto L29;
                        } else {
                            do {
                                _t102 =  *(_t89 + 4);
                                _t67 =  *_t89;
                                _t89 = _t89 + 8;
                                _v132 = _t67 +  *((intOrPtr*)(_t102 + 4194304));
                                _t69 = _t102 + 4194304;
                                L1();
                            } while(_t89 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__);
                            __esp =  &(__esp[8]);
                            _pop(__ebx);
                            _pop(__esi);
                            _pop(__edi);
                            return _t69;
                        }
                    } else {
                        _t65 =  *(_t89 + 4);
L22:
                        if(_t65 != 0) {
                            goto L42;
                        } else {
                            _t65 =  *(_t89 + 8);
                            if(_t65 != 1) {
                                L00401D40(_t89, __ecx, _t101, _t112, _t116, __ebp, "  Unknown pseudo relocation protocol version %d.\n", _t65);
                                __esp = __esp - 28;
                                _t71 = _v156;
                                _v176 = 8064;
                                if(_t71 == -3) {
                                     *4210708 = -1;
                                    goto L60;
                                } else {
                                    if(_t71 == -4) {
                                         *4210708 = -2;
                                        goto L58;
                                    } else {
                                        if(_t71 == 0) {
                                            _t71 =  *4210708;
                                        }
                                        if(_t71 == -1) {
L60:
                                            asm("fninit");
                                        } else {
                                            if(_t71 == -2) {
L58:
                                                __imp___fpreset();
                                            } else {
                                                asm("fldenv [eax]");
                                                _v176 =  *(_t71 + 28) & 65535;
                                            }
                                        }
                                    }
                                }
                                if((___cpu_features & 16) != 0) {
                                    asm("ldmxcsr dword [esp+0xc]");
                                }
                                __esp =  &(__esp[7]);
                                return 0;
                            } else {
                                while(1) {
L25:
                                    _t89 = _t89 + 12;
                                    if(_t89 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                        break;
                                    } else {
                                        goto L26;
                                    }
                                    while(1) {
L26:
                                        _t74 =  *_t89;
                                        _t92 =  *(_t89 + 4);
                                        _t104 =  *(_t89 + 8) & 255;
                                        _t112 = _t74 + 4194304;
                                        _t116 = _t92 + 4194304;
                                        _t75 =  *(_t74 + 4194304);
                                        if(_t104 == 16) {
                                            break;
                                        }
                                        if(_t104 != 32) {
                                            if(_t104 == 8) {
                                                _t94 =  *_t116 & 255;
                                                if(_t94 < 0) {
                                                    _t94 = _t94 | -256;
                                                }
                                                _v132 = _t75 + _t94 - _t112;
                                                _t65 = _t116;
                                                L1();
                                                goto L25;
                                            } else {
                                                _v156 = _t104;
                                                 *__esp = "  Unknown pseudo relocation bit size %d.\n";
                                                _v132 = 0;
                                                _t75 = L00401D40(_t89, _t92, _t104, _t112, _t116, __ebp);
                                                break;
                                            }
                                            goto L62;
                                        } else {
                                            _t89 = _t89 + 12;
                                            _v132 = _t75 - _t112 +  *_t116;
                                            _t65 = _t116;
                                            L1();
                                            if(_t89 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                                continue;
                                            }
                                        }
                                        goto L29;
                                    }
                                    _t105 =  *((signed short*)(_t92 + 4194304)) & 65535;
                                    if(_t105 < 0) {
                                        _t105 = _t105 | -65536;
                                    }
                                    _v132 = _t75 + _t105 - _t112;
                                    _t65 = _t116;
                                    L1();
                                }
L29:
                                __esp =  &(__esp[8]);
                                _pop(__ebx);
                                _pop(__esi);
                                _pop(__edi);
                                return _t65;
                            }
                        }
                    }
                }
            }
        } else {
L16:
            return _t65;
        }
    } else {
        _t80 = _v76;
        if(_t80 == 64 || _t80 == 4) {
            if(_t116 != 0) {
                _t81 = 0;
                do {
                     *((char*)(_t88 + _t81)) =  *(_t112 + _t81) & 255;
                    _t81 = _t81 + 1;
                } while(_t81 < _t116);
            }
            goto L7;
        } else {
            __ebp =  &_v100;
            _v108 = 64;
            _v104 =  &_v100;
            _v112 = _v84;
            _t80 = _v96;
             *__esp = _t80;
            _VirtualProtect$16();
            __esp = __esp - 16;
            _t99 = _v92;
            if(__ecx != 0) {
                _t110 = 0;
                do {
                    _t80 =  *(_t112 + _t110) & 255;
                     *((char*)(_t88 + _t110)) = _t80;
                    _t110 = _t110 + 1;
                } while(_t110 < _t116);
            }
            if(_t99 == 64 || _t99 == 4) {
L7:
                __esp =  &(__esp[0xf]);
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                _pop(__ebp);
                return _t80;
            } else {
                _v120 = __ebp;
                _v124 = _v116;
                _v128 = _v100;
                _t85 = _v112;
                 *__esp = _t85;
                _VirtualProtect$16();
                __esp = __esp - 16;
                __esp =  &(__esp[0xf]);
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                _pop(__ebp);
                return _t85;
            }
        }
    }
L62:
}

signed int L00401D90(
    signed int __eax,                      // r0
    _unknown_ __ebx,                       // r1
    signed char* __ecx,                    // r2
    signed int __edx,                      // r3
    _unknown_ __edi,                       // r4
    _unknown_ __esi,                       // r5
    char* __ebp                            // r6
)
{
    signed int _v48;                       // _cfa_ffffffd0
    signed int _v56;                       // _cfa_ffffffc8
    intOrPtr _v64;                         // _cfa_ffffffc0
    signed int _v68;                       // _cfa_ffffffbc
    char* _v72;                            // _cfa_ffffffb8
    char* _v76;                            // _cfa_ffffffb4
    signed int _v80;                       // _cfa_ffffffb0
    signed int _v84;                       // _cfa_ffffffac
    intOrPtr _v88;                         // _cfa_ffffffa8
    char* _v92;                            // _cfa_ffffffa4
    intOrPtr _v96;                         // _cfa_ffffffa0
    char* _v100;                           // _cfa_ffffff9c
    char _v104;                            // _cfa_ffffff98
    signed int _v128;                      // _cfa_ffffff80 (outparam)
    signed int _v148;                      // _cfa_ffffff6c
    signed int _t54;                       // _t54
    intOrPtr _t56;                         // _t56
    signed int _t59;                       // _t59
    signed int _t61;                       // _t61
    intOrPtr _t64;                         // _t64
    signed int _t65;                       // _t65
    signed int _t73;                       // _t73
    _unknown_ _t74;                        // _t74
    signed int _t78;                       // _t78
    intOrPtr* _t81;                        // _t81
    signed int _t84;                       // _t84
    signed int _t86;                       // _t86
    intOrPtr _t91;                         // _t91
    char _t93;                             // _t93
    signed int _t94;                       // _t94
    signed int _t96;                       // _t96
    signed int _t97;                       // _t97
    _unknown_ _t102;                       // _t102

    __ebp = __ebp;
    _push(__ebp);
    _push(__edi);
    _t104 = __edx;
    _push(__esi);
    _t107 = __ecx;
    _push(__ebx);
    __esp = __esp - 60;
    _v68 = 28;
    _v72 =  &_v56;
     *__esp = __eax;
    _VirtualQuery$12();
    __esp = __esp - 12;
    if( &_v56 == 0) {
        _v80 = __eax;
        L00401D40(__eax, __ecx, __edx, __edx, __ecx, __ebp, "  VirtualQuery failed for %d bytes at address %p", 28);
        _t54 =  *4223068;
        if(_t54 == 0) {
             *4223068 = 1;
            _t54 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__ -  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
            if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 7) {
                goto L15;
            } else {
                _push(__edx);
                _push(__ecx);
                _push(__eax);
                __esp = __esp - 32;
                _t93 = __RUNTIME_PSEUDO_RELOC_LIST_END__;
                if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ > 11) {
                    if(_t93 != 0) {
                        _t81 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                        goto L41;
                    } else {
                        _t54 =  *4216632;
                        _t104 = _t54 |  *4216636;
                        if((_t54 |  *4216636) != 0) {
                            _t81 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                            goto L21;
                        } else {
                            _t93 =  *4216640;
                            _t81 = 4216640;
                            goto L19;
                        }
                    }
                } else {
                    _t81 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
L19:
                    if(_t93 != 0) {
L41:
                        if(_t81 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                            goto L28;
                        } else {
                            do {
                                _t94 =  *(_t81 + 4);
                                _t56 =  *_t81;
                                _t81 = _t81 + 8;
                                _v104 = _t56 +  *((intOrPtr*)(_t94 + 4194304));
                                _t59 = L00401D90(_t94 + 4194304, _t81, 4,  &_v104, _t104, _t94 + 4194304, __ebp);
                            } while(_t81 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__);
                            __esp =  &(__esp[8]);
                            _pop(__ebx);
                            _pop(__esi);
                            _pop(__edi);
                            return _t59;
                        }
                    } else {
                        _t54 =  *(_t81 + 4);
L21:
                        if(_t54 != 0) {
                            goto L41;
                        } else {
                            _t54 =  *(_t81 + 8);
                            if(_t54 != 1) {
                                L00401D40(_t81, __ecx, _t93, _t104, _t107, __ebp, "  Unknown pseudo relocation protocol version %d.\n", _t54);
                                __esp = __esp - 28;
                                _t61 = _v128;
                                _v148 = 8064;
                                if(_t61 == -3) {
                                     *4210708 = -1;
                                    goto L59;
                                } else {
                                    if(_t61 == -4) {
                                         *4210708 = -2;
                                        goto L57;
                                    } else {
                                        if(_t61 == 0) {
                                            _t61 =  *4210708;
                                        }
                                        if(_t61 == -1) {
L59:
                                            asm("fninit");
                                        } else {
                                            if(_t61 == -2) {
L57:
                                                __imp___fpreset();
                                            } else {
                                                asm("fldenv [eax]");
                                                _v148 =  *(_t61 + 28) & 65535;
                                            }
                                        }
                                    }
                                }
                                if((___cpu_features & 16) != 0) {
                                    asm("ldmxcsr dword [esp+0xc]");
                                }
                                __esp =  &(__esp[7]);
                                return 0;
                            } else {
                                while(1) {
L24:
                                    _t81 = _t81 + 12;
                                    if(_t81 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                        break;
                                    } else {
                                        goto L25;
                                    }
                                    while(1) {
L25:
                                        _t64 =  *_t81;
                                        _t84 =  *(_t81 + 4);
                                        _t96 =  *(_t81 + 8) & 255;
                                        _t104 = _t64 + 4194304;
                                        _t107 = _t84 + 4194304;
                                        _t65 =  *(_t64 + 4194304);
                                        if(_t96 == 16) {
                                            break;
                                        }
                                        if(_t96 != 32) {
                                            if(_t96 == 8) {
                                                _t86 =  *_t107 & 255;
                                                if(_t86 < 0) {
                                                    _t86 = _t86 | -256;
                                                }
                                                _v104 = _t65 + _t86 - _t104;
                                                _t54 = L00401D90(_t107, _t81, 1,  &_v104, _t104, _t107, __ebp);
                                                goto L24;
                                            } else {
                                                _v128 = _t96;
                                                 *__esp = "  Unknown pseudo relocation bit size %d.\n";
                                                _v104 = 0;
                                                _t65 = L00401D40(_t81, _t84, _t96, _t104, _t107, __ebp);
                                                break;
                                            }
                                            goto L61;
                                        } else {
                                            _t81 = _t81 + 12;
                                            _v104 = _t65 - _t104 +  *_t107;
                                            _t54 = L00401D90(_t107, _t81, 4,  &_v104, _t104, _t107, __ebp);
                                            if(_t81 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                                continue;
                                            }
                                        }
                                        goto L28;
                                    }
                                    _t97 =  *(_t84 + 4194304) & 65535;
                                    if(_t97 < 0) {
                                        _t97 = _t97 | -65536;
                                    }
                                    _v104 = _t65 + _t97 - _t104;
                                    _t54 = L00401D90(_t107, _t81, 2,  &_v104, _t104, _t107, __ebp);
                                }
L28:
                                __esp =  &(__esp[8]);
                                _pop(__ebx);
                                _pop(__esi);
                                _pop(__edi);
                                return _t54;
                            }
                        }
                    }
                }
            }
        } else {
L15:
            return _t54;
        }
    } else {
        _t73 = _v48;
        if(_t73 == 64 || _t73 == 4) {
            if(_t107 != 0) {
                _t74 = 0;
                do {
                     *((char*)(__eax + _t74)) =  *(_t104 + _t74) & 255;
                    _t74 = _t74 + 1;
                } while(_t74 < _t107);
            }
            goto L6;
        } else {
            __ebp =  &_v72;
            _v80 = 64;
            _v76 =  &_v72;
            _v84 = _v56;
            _t73 = _v68;
             *__esp = _t73;
            _VirtualProtect$16();
            __esp = __esp - 16;
            _t91 = _v64;
            if(__ecx != 0) {
                _t102 = 0;
                do {
                    _t73 =  *(_t104 + _t102) & 255;
                     *((char*)(__eax + _t102)) = _t73;
                    _t102 = _t102 + 1;
                } while(_t102 < _t107);
            }
            if(_t91 == 64 || _t91 == 4) {
L6:
                __esp =  &(__esp[0xf]);
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                _pop(__ebp);
                return _t73;
            } else {
                _v92 = __ebp;
                _v96 = _v88;
                _v100 = _v72;
                _t78 = _v84;
                 *__esp = _t78;
                _VirtualProtect$16();
                __esp = __esp - 16;
                __esp =  &(__esp[0xf]);
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                _pop(__ebp);
                return _t78;
            }
        }
    }
L61:
}

signed int __pei386_runtime_relocator(
    _unknown_ __ebx,                       // r1
    signed int __edi,                      // r4
    signed char* __esi                     // r5
)
{// addr = 0x00401E80
    char _v16;                             // _cfa_fffffff0
    signed int _v40;                       // _cfa_ffffffd8 (outparam)
    signed int _v60;                       // _cfa_ffffffc4
    signed int _t28;                       // _t28
    intOrPtr _t30;                         // _t30
    signed int _t33;                       // _t33
    signed int _t35;                       // _t35
    intOrPtr _t38;                         // _t38
    signed int _t39;                       // _t39
    intOrPtr* _t48;                        // _t48
    _unknown_ _t49;                        // _t49
    signed int _t51;                       // _t51
    signed int _t53;                       // _t53
    char _t57;                             // _t57
    signed int _t58;                       // _t58
    signed int _t60;                       // _t60
    signed int _t61;                       // _t61

    _t68 = __esi;
    _t66 = __edi;
    _t28 =  *4223068;
    if(_t28 == 0) {
         *4223068 = 1;
        _t28 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__ -  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
        if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 7) {
            goto L1;
        } else {
            _push(__edi);
            _push(__esi);
            _push(__ebx);
            __esp = __esp - 32;
            _t57 = __RUNTIME_PSEUDO_RELOC_LIST_END__;
            if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ > 11) {
                if(_t57 != 0) {
                    _t48 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                    goto L27;
                } else {
                    _t28 =  *4216632;
                    _t66 = _t28 |  *4216636;
                    if((_t28 |  *4216636) != 0) {
                        _t48 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                        goto L7;
                    } else {
                        _t57 =  *4216640;
                        _t48 = 4216640;
                        goto L5;
                    }
                }
            } else {
                _t48 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
L5:
                if(_t57 != 0) {
L27:
                    if(_t48 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                        goto L14;
                    } else {
                        do {
                            _t58 =  *(_t48 + 4);
                            _t30 =  *_t48;
                            _t48 = _t48 + 8;
                            _v16 = _t30 +  *((intOrPtr*)(_t58 + 4194304));
                            _t33 = L00401D90(_t58 + 4194304, _t48, 4,  &_v16, _t66, _t58 + 4194304, __ebp);
                        } while(_t48 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__);
                        __esp = __esp + 32;
                        _pop(__ebx);
                        _pop(__esi);
                        _pop(__edi);
                        return _t33;
                    }
                } else {
                    _t28 =  *(_t48 + 4);
L7:
                    if(_t28 != 0) {
                        goto L27;
                    } else {
                        _t28 =  *(_t48 + 8);
                        if(_t28 != 1) {
                            L00401D40(_t48, _t49, _t57, _t66, _t68, __ebp, "  Unknown pseudo relocation protocol version %d.\n", _t28);
                            __esp = __esp - 28;
                            _t35 = _v40;
                            _v60 = 8064;
                            if(_t35 == -3) {
                                 *4210708 = -1;
                                goto L45;
                            } else {
                                if(_t35 == -4) {
                                     *4210708 = -2;
                                    goto L43;
                                } else {
                                    if(_t35 == 0) {
                                        _t35 =  *4210708;
                                    }
                                    if(_t35 == -1) {
L45:
                                        asm("fninit");
                                    } else {
                                        if(_t35 == -2) {
L43:
                                            __imp___fpreset();
                                        } else {
                                            asm("fldenv [eax]");
                                            _v60 =  *(_t35 + 28) & 65535;
                                        }
                                    }
                                }
                            }
                            if((___cpu_features & 16) != 0) {
                                asm("ldmxcsr dword [esp+0xc]");
                            }
                            __esp = __esp + 28;
                            return 0;
                        } else {
                            while(1) {
L10:
                                _t48 = _t48 + 12;
                                if(_t48 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                    break;
                                } else {
                                    goto L11;
                                }
                                while(1) {
L11:
                                    _t38 =  *_t48;
                                    _t51 =  *(_t48 + 4);
                                    _t60 =  *(_t48 + 8) & 255;
                                    _t66 = _t38 + 4194304;
                                    _t68 = _t51 + 4194304;
                                    _t39 =  *(_t38 + 4194304);
                                    if(_t60 == 16) {
                                        break;
                                    }
                                    if(_t60 != 32) {
                                        if(_t60 == 8) {
                                            _t53 =  *_t68 & 255;
                                            if(_t53 < 0) {
                                                _t53 = _t53 | -256;
                                            }
                                            _v16 = _t39 + _t53 - _t66;
                                            _t28 = L00401D90(_t68, _t48, 1,  &_v16, _t66, _t68, __ebp);
                                            goto L10;
                                        } else {
                                            _v40 = _t60;
                                             *__esp = "  Unknown pseudo relocation bit size %d.\n";
                                            _v16 = 0;
                                            _t39 = L00401D40(_t48, _t51, _t60, _t66, _t68, __ebp);
                                            break;
                                        }
                                        goto L47;
                                    } else {
                                        _t48 = _t48 + 12;
                                        _v16 = _t39 - _t66 +  *_t68;
                                        _t28 = L00401D90(_t68, _t48, 4,  &_v16, _t66, _t68, __ebp);
                                        if(_t48 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                            continue;
                                        }
                                    }
                                    goto L14;
                                }
                                _t61 =  *(_t51 + 4194304) & 65535;
                                if(_t61 < 0) {
                                    _t61 = _t61 | -65536;
                                }
                                _v16 = _t39 + _t61 - _t66;
                                _t28 = L00401D90(_t68, _t48, 2,  &_v16, _t66, _t68, __ebp);
                            }
L14:
                            __esp = __esp + 32;
                            _pop(__ebx);
                            _pop(__esi);
                            _pop(__edi);
                            return _t28;
                        }
                    }
                }
            }
        }
    } else {
L1:
        return _t28;
    }
L47:
}

_fesetenv(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00402070
    signed int _v16;                       // _cfa_fffffff0
    intOrPtr _t6;                          // _t6

    _t6 = _a4;
    _v16 = 8064;
    if(_t6 == -3) {
         *4210708 = -1;
        goto L12;
    } else {
        if(_t6 == -4) {
             *4210708 = -2;
            goto L10;
        } else {
            if(_t6 == 0) {
                _t6 =  *4210708;
            }
            if(_t6 == -1) {
L12:
                asm("fninit");
            } else {
                if(_t6 == -2) {
L10:
                    __imp___fpreset();
                } else {
                    asm("fldenv [eax]");
                    _v16 =  *(_t6 + 28) & 65535;
                }
            }
        }
    }
    if((___cpu_features & 16) != 0) {
        asm("ldmxcsr dword [esp+0xc]");
    }
    return 0;
}

void* ___mingw_aligned_free(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x004020F0
    char _v28;                             // _cfa_ffffffe4
    char* _v40;                            // _cfa_ffffffd8
    void* _t6;            // _t6

    _v40 =  &_v28;
     *__esp = _a4;
    _t6 = ___mingw_memalign_base();
    free(_t6);
    return _t6;
}

signed int L00402120(
    signed int __eax,                      // r0
    signed int __ecx,                      // r2
    signed int __edx                       // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t60;                       // _t60
    signed int _t64;                       // _t64
    signed int _t65;                       // _t65
    signed int _t67;                       // _t67
    signed int _t68;                       // _t68
    signed int _t70;                       // _t70
    _unknown_ _t72;                        // _t72
    signed int _t73;                       // _t73
    signed int _t74;                       // _t74
    _unknown_ _t77;                        // _t77
    signed int _t78;                       // _t78
    signed int _t79;                       // _t79
    signed int _t82;                       // _t82
    signed int _t83;                       // _t83
    signed int _t85;                       // _t85
    signed int _t87;                       // _t87
    signed int _t89;                       // _t89
    signed int _t90;                       // _t90
    signed int _t91;                       // _t91
    signed int _t94;                       // _t94
    signed int _t96;                       // _t96
    signed int _t97;                       // _t97
    signed int _t99;                       // _t99
    signed int _t101;                      // _t101
    signed int _t102;                      // _t102
    signed int _t103;                      // _t103
    signed int _t104;                      // _t104
    signed int _t105;                      // _t105
    signed int _t108;                      // _t108
    signed int _t109;                      // _t109
    signed int _t111;                      // _t111
    signed int _t112;                      // _t112
    signed int _t114;                      // _t114
    signed int _t115;                      // _t115
    signed int _t116;                      // _t116
    signed int _t117;                      // _t117
    signed int _t119;                      // _t119

    _t115 =  *__eax;
    __esp[7] = __edx;
    __esp[0xa] = __ecx;
    _t65 = _t115;
    if(_t115 == 45) {
L20:
        _t82 =  *((signed char*)(__eax + 1)) & 255;
        _t89 = __eax + 1;
        if(_t115 == __esp[7]) {
            _t67 = __esp[0xa] & 32;
            while(1) {
                _t60 = _t89 + 1;
                if(_t82 == 93) {
                    break;
                }
                if(_t82 == 127) {
L60:
                    _t82 =  *(_t89 + 1) & 255;
                    if(_t67 != 0) {
                        _t89 = _t60;
                        continue;
                    }
                    _t104 = _t89 + 2;
                    _t89 = _t60;
                    _t60 = _t104;
L57:
                    while(_t82 != 0) {
                        _t82 =  *(_t89 + 1) & 255;
                        _t89 = _t60;
                        _t60 = _t89 + 1;
                        if(_t82 == 93) {
                            goto L25;
                        }
                        if(_t82 != 127) {
                            continue;
                        }
                        goto L60;
                    }
L24:
                    return 0;
                }
                goto L57;
            }
L25:
            return _t60;
        }
        _t115 = _t82;
L2:
        __esp[8] = __esp[0xa] & 16384;
        _t64 = _t115;
        _t116 = _t89;
        _t90 = _t65;
        _t68 = _t64;
        while(1) {
            _t97 = _t116 + 1;
            _t105 = _t68;
            if(_t68 == 93) {
                goto L24;
            }
            if(_t68 == 45) {
                _t68 =  *(_t116 + 1);
                if(_t68 == 93) {
                    _t116 = _t97;
                    _t90 = 45;
L10:
                    _t64 = __esp[8];
                    if(_t64 != 0) {
                        if(_t90 == __esp[7]) {
L12:
                            _t83 = _t68;
                            _t91 = _t116;
                            _t70 = __esp[0xa] & 32;
                            while(1) {
                                _t60 = _t91 + 1;
                                if(_t83 == 93) {
                                    goto L25;
                                }
                                if(_t83 == 127) {
L18:
                                    _t83 =  *(_t91 + 1) & 255;
                                    if(_t70 != 0) {
                                        _t91 = _t60;
                                        continue;
                                    }
                                    _t108 = _t91 + 2;
                                    _t91 = _t60;
                                    _t60 = _t108;
L15:
                                    while(_t83 != 0) {
                                        _t83 =  *(_t91 + 1) & 255;
                                        _t91 = _t60;
                                        _t60 = _t91 + 1;
                                        if(_t83 == 93) {
                                            goto L25;
                                        }
                                        if(_t83 != 127) {
                                            continue;
                                        }
                                        goto L18;
                                    }
                                    goto L24;
                                }
                                goto L15;
                            }
                            goto L25;
                        }
                        continue;
                    }
                     *__esp = _t90;
                    __esp[9] = _t90;
                    _tolower();
                    _t109 = _t64;
                    _t64 = __esp[7];
                     *__esp = _t64;
                    _tolower();
                    _t90 = __esp[9];
                    if(_t109 != _t64) {
                        continue;
                    }
                    goto L12;
                }
                _t111 = _t68;
                if(_t111 != 0) {
                    __esp[9] = _t116;
                    _t117 = _t90;
                    __esp[0xb] = _t116 + 2;
                    _t99 = _t111;
                    _t112 = __esp[8];
                    while(_t117 < _t99) {
                        if(_t112 != 0) {
                            _t77 = _t117 - __esp[7];
                            _t117 = _t117 + 1;
                            if(_t77 == 0) {
L32:
                                _t103 = __esp[0xb];
                                _t96 =  *(__esp[9] + 2) & 255;
                                _t87 = __esp[0xa] & 32;
                                while(1) {
                                    _t60 = _t103 + 1;
                                    if(_t96 == 93) {
                                        goto L25;
                                    }
                                    if(_t96 == 127) {
L38:
                                        _t96 =  *(_t103 + 1) & 255;
                                        if(_t87 != 0) {
                                            _t103 = _t60;
                                            continue;
                                        }
                                        _t78 = _t103 + 2;
                                        _t103 = _t60;
                                        _t60 = _t78;
L35:
                                        while(_t96 != 0) {
                                            _t96 =  *(_t103 + 1) & 255;
                                            _t103 = _t60;
                                            _t60 = _t103 + 1;
                                            if(_t96 == 93) {
                                                goto L25;
                                            }
                                            if(_t96 != 127) {
                                                continue;
                                            }
                                            goto L38;
                                        }
                                        goto L24;
                                    }
                                    goto L35;
                                }
                                goto L25;
                            }
                            continue;
                        }
                         *__esp = _t117;
                        _t117 = _t117 + 1;
                        _tolower();
                        _t79 = _t64;
                        _t64 = __esp[7];
                         *__esp = _t64;
                        _tolower();
                        if(_t79 != _t64) {
                            continue;
                        }
                        goto L32;
                    }
                    __esp[9] = __esp[0xb];
                    _t101 = _t99;
                    _t114 = _t117;
                    __esp[0xb] = __esp[9];
                    _t119 = __esp[8];
                    while(_t114 > _t101) {
                        if(_t119 != 0) {
                            _t72 = _t114 - __esp[7];
                            _t114 = _t114 - 1;
                            if(_t72 == 0) {
L45:
                                _t102 = __esp[9];
                                _t94 =  *(__esp[0xb] + 2) & 255;
                                _t85 = __esp[0xa] & 32;
                                while(1) {
                                    _t60 = _t102 + 1;
                                    if(_t94 == 93) {
                                        goto L25;
                                    }
                                    if(_t94 == 127) {
L51:
                                        _t94 =  *(_t102 + 1) & 255;
                                        if(_t85 != 0) {
                                            _t102 = _t60;
                                            continue;
                                        }
                                        _t73 = _t102 + 2;
                                        _t102 = _t60;
                                        _t60 = _t73;
L48:
                                        while(_t94 != 0) {
                                            _t94 =  *(_t102 + 1) & 255;
                                            _t102 = _t60;
                                            _t60 = _t102 + 1;
                                            if(_t94 == 93) {
                                                goto L25;
                                            }
                                            if(_t94 != 127) {
                                                continue;
                                            }
                                            goto L51;
                                        }
                                        goto L24;
                                    }
                                    goto L48;
                                }
                                goto L25;
                            }
                            continue;
                        }
                         *__esp = _t114;
                        _t114 = _t114 - 1;
                        _tolower();
                        _t74 = _t64;
                        _t64 = __esp[7];
                         *__esp = _t64;
                        _tolower();
                        if(_t74 != _t64) {
                            continue;
                        }
                        goto L45;
                    }
                    _t105 = _t101;
                    _t97 = __esp[9];
L7:
                    if(_t105 == 47 || _t105 == 92) {
                        goto L24;
                    } else {
                        _t68 =  *_t97;
                        _t116 = _t97;
                        _t90 = _t105;
                        goto L10;
                    }
                }
                goto L24;
            }
            if(_t68 == 0) {
                goto L24;
            }
            goto L7;
        }
        goto L24;
    }
    _t89 = __eax;
    if(_t115 == 93) {
        goto L20;
    }
    goto L2;
}

signed int L00402450(
    char* __eax,                           // r0
    signed int __ecx,                      // r2
    signed char* __edx                     // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t39;                       // _t39
    signed int _t43;                       // _t43
    signed char* _t45;                     // _t45
    signed int _t46;                       // _t46
    signed int _t48;                       // _t48
    signed char _t49;                      // _t49
    signed int _t50;                       // _t50
    signed char* _t52;                     // _t52
    signed char* _t53;                     // _t53
    signed char _t54;                      // _t54
    signed int _t57;                       // _t57
    signed char* _t61;                     // _t61
    signed int _t64;                       // _t64
    char* _t67;                            // _t67
    char* _t68;                            // _t68
    signed int _t70;                       // _t70
    signed char* _t71;                     // _t71
    signed int _t73;                       // _t73

    _t54 = __ecx;
    _t71 = __eax;
    _t68 = __edx;
    __esp = __esp - 44;
    _t64 =  *__edx & 255;
    _t57 =  *__eax;
    _t39 = _t57;
    if(_t64 == 46) {
        if(_t57 == 46) {
            _t52 = __eax + 1;
L2:
            __esp[5] = _t54 & 32;
            do {
                _t67 = _t68;
                if(_t39 == 63) {
                    if( *_t68 == 0) {
                        _t57 = 63;
L20:
                        __esp =  &(__esp[0xb]);
                        return _t57;
                    }
L29:
                    _t39 =  *_t52 & 255;
                    _t71 = _t52;
                    goto L25;
                }
                if(_t39 == 91) {
                    _t58 =  *_t68;
                    if( *_t68 == 0) {
                        _t57 = 91;
                        goto L20;
                    }
                    if(_t71[1] == 33) {
                        _t53 =  &(_t71[2]);
                        __esp[4] = _t54;
                        _t43 = L00402120(_t53, _t54, _t58);
                        _t54 = __esp[4];
                        _t39 = _t71[2] & 255;
                        if(_t43 == 0) {
                            if(_t39 == 93) {
                                _t39 = _t71[3] & 255;
                                _t53 =  &(_t71[3]);
                            }
                            while(1) {
L41:
                                _t71 =  &(_t53[1]);
                                if(_t39 == 93) {
                                    break;
                                } else {
                                    goto L42;
                                }
                                do {
L42:
                                    if(_t39 == 127) {
                                        _t39 = _t53[1] & 255;
                                        if(__esp[5] != 0) {
                                            _t53 = _t71;
                                            goto L41;
                                        }
                                        _t61 =  &(_t53[2]);
                                        _t53 = _t71;
                                        _t71 = _t61;
                                    }
                                    if(_t39 == 0) {
L49:
                                        _t57 = 93;
                                        goto L20;
                                    }
                                    _t39 = _t53[1] & 255;
                                    _t53 = _t71;
                                    _t71 =  &(_t53[1]);
                                } while(_t39 != 93);
                                break;
                            }
                            _t39 = _t53[1] & 255;
                            goto L25;
                        }
                        _t71 = _t53;
                        goto L25;
                    }
                    __esp[4] = _t54;
                    _t45 = L00402120(_t52, _t54, _t58);
                    _t71 = _t45;
                    if(_t45 == 0) {
                        goto L49;
                    }
                    _t39 =  *_t45 & 255;
                    _t54 = __esp[4];
                    goto L25;
                }
                if(_t39 == 42) {
                    do {
                        _t46 =  *_t52 & 255;
                    } while(_t46 == 42);
                    _t57 = 0;
                    if(_t46 == 0) {
                        goto L20;
                    }
                    _t70 = _t54 | 65536;
                    while(1) {
                        _t48 = L00402450(_t52, _t70, _t67);
                        if(_t48 == 0) {
                            break;
                        }
                        _t67 = _t67 + 1;
                        if( *((char*)(_t67 - 1)) != 0) {
                            continue;
                        }
                        break;
                    }
                    _t57 = _t48;
                    goto L20;
                }
                if((_t54 & 32) == 0 && _t57 == 127) {
                    _t57 = _t71[1];
                    if(_t57 != 0) {
                        _t52 =  &(_t71[2]);
                    }
                }
                _t49 =  *_t68;
                if(_t49 == 0) {
                    goto L20;
                } else {
                    __esp[4] = _t49;
                    if((_t54 & 64) != 0) {
                        _t73 = _t57 - _t49;
                    } else {
                         *__esp = _t57;
                        __esp[7] = _t54;
                        __esp[6] = _t57;
                        _tolower();
                        _t50 = __esp[4];
                         *__esp = _t50;
                        _tolower();
                        _t54 = __esp[7];
                        _t57 = __esp[6];
                        _t73 = _t49 - _t50;
                    }
                    if(_t73 == 0) {
                        goto L29;
                    } else {
                        _t57 = _t57 - __esp[4];
                        goto L20;
                    }
                }
L25:
                _t57 = _t39;
                _t52 =  &(_t71[1]);
                _t68 = _t68 + 1;
            } while(_t57 != 0);
            _t64 =  *(_t67 + 1) & 255;
L27:
            _t57 =  ~_t64;
            goto L20;
        }
        if((__ecx & 65536) != 0) {
            goto L1;
        }
        _t57 = _t57 - 46;
        goto L20;
    }
L1:
    _t52 =  &(_t71[1]);
    if(_t57 == 0) {
        goto L27;
    }
    goto L2;
}

L00402680(
    char* __eax,                           // r0
    unsigned int __edx                     // r3
)
{
    _unknown_ __ebx;                       // r1
    signed int __edi;                      // r4
    _unknown_ __esi;                       // r5
    char _t5;                              // _t5
    _unknown_ _t9;                         // _t9
    char* _t10;                            // _t10
    signed int _t16;                       // _t16

    __ecx = __eax + 1;
    _push(_t9);
    _t10 = __eax;
    _t5 =  *__eax;
    if(_t5 == 0) {
L13:
        _pop(__ebx);
        return _t5;
    } else {
        __edi = 0;
        _t16 = (__edx >> 5 ^ 1) & 1;
        goto L6;
        do {
            do {
L6:
                if(_t5 != 127 || _t16 == 0) {
                    if(__edi == 0) {
                        if(_t5 == 42 || _t5 == 63) {
                            goto L17;
                        } else {
                            goto L4;
                        }
                    } else {
                        if(__edi <= 1 || _t5 != 93) {
                            _t10 = __ecx;
                            if(_t5 == 33) {
                                goto L5;
                            } else {
                                goto L12;
                            }
                        } else {
L17:
                            _pop(__ebx);
                            return 1;
                        }
                    }
                } else {
                    __ecx = _t10 + 2;
                    if(_t10[1] == 0) {
                        _t5 = 0;
                        goto L13;
                    } else {
                        if(__edi == 0) {
L4:
                            _t10 = __ecx;
                            __edi = _t5 == 91 & 255;
                            goto L5;
                        } else {
                            goto L12;
                        }
                    }
                }
                goto L19;
L12:
                _t10 = __ecx;
                __edi = __edi + 1;
                __ecx = __ecx + 1;
                _t5 =  *_t10;
            } while(_t5 != 0);
            goto L13;
L5:
            _t5 =  *_t10;
            __ecx = __ecx + 1;
        } while(_t5 != 0);
        goto L13;
    }
L19:
}

L00402720(
    intOrPtr __eax,                        // r0
    _unknown_ __edx                        // r3
)
{
    _unknown_ _v24;                        // _cfa_ffffffe8 (outparam)
    intOrPtr __edi;                        // r4
    intOrPtr _t21;                         // _t21
    intOrPtr _t24;                         // _t24
    intOrPtr _t27;                         // _t27

    __esp = __esp - 16;
    _t21 = ___mingw_realloc( *((intOrPtr*)(__edx + 8)), 8 + ( *((intOrPtr*)(__edx + 12)) +  *((intOrPtr*)(__edx + 4))) * 4);
    if(_t21 == 0) {
        __esp = __esp + 16;
        return 1;
    } else {
        _t24 =  *((intOrPtr*)(__edx + 4));
        _t27 =  *((intOrPtr*)(__edx + 12));
         *((intOrPtr*)(__edx + 8)) = _t21;
        __edi = _t24 + 1;
         *((intOrPtr*)(__edx + 4)) = __edi;
         *((intOrPtr*)(_t21 + (_t24 + _t27) * 4)) = __eax;
         *((intOrPtr*)(_t21 + (_t27 + __edi) * 4)) = 0;
        __esp = __esp + 16;
        return 0;
    }
}

L00402780(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx                        // r3
)
{
    void* _t7;            // _t7

    __esp = __esp - 20;
    _t4 =  *__eax;
    if( *__eax != 0) {
        L00402780(_t4, __edx);
    }
    _t5 =  *((intOrPtr*)(__eax + 8));
    if( *((intOrPtr*)(__eax + 8)) != 0 && __edx != 0) {
        L00402720(_t5, __edx);
    }
    _t6 =  *((intOrPtr*)(__eax + 4));
    if( *((intOrPtr*)(__eax + 4)) != 0) {
        L00402780(_t6, __edx);
    }
    _t7 = ___mingw_aligned_free(__eax);
    __esp = __esp + 20;
    return _t7;
}

L004027D0(
    _unknown_ __eax                        // r0
)
{
    signed int __ebx;                      // r1
    void* _t11;           // _t11
    _unknown_ _t12;                        // _t12

    __esp = __esp - 20;
    __ebx =  *((intOrPtr*)(__eax + 12)) + 1;
    _t11 = _malloc(__ebx * 4);
     *((intOrPtr*)(__eax + 8)) = _t11;
    if(_t11 == 0) {
        _t12 = 3;
    } else {
         *((intOrPtr*)(__eax + 4)) = 0;
        if(__ebx > 0) {
            do {
                __ebx = __ebx - 1;
                 *((intOrPtr*)(_t11 + __ebx * 4)) = 0;
            } while(__ebx != 0);
        }
        _t12 = 0;
    }
    __esp = __esp + 20;
    return _t12;
}

signed int L00402820(
    char* __eax,                           // r0
    signed int __ecx,                      // r2
    signed int __edx,                      // r3
    signed int _a4                         // _cfa_4
)
{
    _unknown_ _v16;                        // _cfa_fffffff0
    char* _v32;                            // _cfa_ffffffe0
    char** _v36;                           // _cfa_ffffffdc
    char _v44;                             // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    signed int _v52;                       // _cfa_ffffffcc
    signed int _v56;                       // _cfa_ffffffc8
    signed int _v60;                       // _cfa_ffffffc4
    signed int _v64;                       // _cfa_ffffffc0
    char* _v68;                            // _cfa_ffffffbc
    char* _v72;                            // _cfa_ffffffb8
    signed int _v76;                       // _cfa_ffffffb4
    signed int _v80;                       // _cfa_ffffffb0
    signed int _v84;                       // _cfa_ffffffac
    signed int _v88;                       // _cfa_ffffffa8
    signed int _v92;                       // _cfa_ffffffa4
    char* _v96;                            // _cfa_ffffffa0
    intOrPtr _v100;                        // _cfa_ffffff9c
    signed char _v101;                     // _cfa_ffffff9b
    signed int _v108;                      // _cfa_ffffff94
    char _v112;                            // _cfa_ffffff90
    signed int _v116;                      // _cfa_ffffff8c (outparam)
    signed int _v120;                      // _cfa_ffffff88 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t209;                       // _t209
    signed int _t210;                      // _t210
    char* _t211;                           // _t211
    int _t212;                             // _t212
    char* _t219;                           // _t219
    signed int _t221;                      // _t221
    signed int _t228;                      // _t228
    char* _t229;                           // _t229
    signed int _t231;                      // _t231
    int _t233;                             // _t233
    signed int _t234;                      // _t234
    signed int _t235;                      // _t235
    char* _t237;                           // _t237
    signed int _t240;                      // _t240
    signed int _t244;                      // _t244
    signed int _t248;                      // _t248
    signed int _t252;                      // _t252
    char* _t253;                           // _t253
    signed int _t255;                      // _t255
    signed int _t259;                      // _t259
    signed int _t261;                      // _t261
    char* _t262;                           // _t262
    signed int _t265;                      // _t265
    signed int _t266;                      // _t266
    signed int _t269;                      // _t269
    signed int _t271;                      // _t271
    char* _t273;                           // _t273
    char* _t274;                           // _t274
    signed int _t275;                      // _t275
    signed int _t278;                      // _t278
    signed int _t279;                      // _t279
    signed int _t281;                      // _t281
    signed int _t285;                      // _t285
    signed int _t286;                      // _t286
    signed int _t287;                      // _t287
    signed int _t288;                      // _t288
    signed int _t289;                      // _t289
    signed int _t292;                      // _t292
    signed int _t293;                      // _t293
    signed int _t294;                      // _t294
    signed int _t295;                      // _t295
    signed int _t297;                      // _t297
    char** _t298;                          // _t298
    signed int _t299;                      // _t299
    signed int _t300;                      // _t300
    signed int _t301;                      // _t301
    signed int _t302;                      // _t302
    signed int _t304;                      // _t304
    char* _t305;                           // _t305
    signed int _t310;                      // _t310
    signed char* _t312;                    // _t312
    signed int _t313;                      // _t313
    signed int _t314;                      // _t314
    signed int _t316;                      // _t316
    signed int _t317;                      // _t317
    signed int _t318;                      // _t318
    char* _t322;                           // _t322
    char* _t324;                           // _t324
    signed int _t326;                      // _t326
    signed int _t327;                      // _t327
    char* _t332;                           // _t332
    signed int _t333;                      // _t333
    signed int _t334;                      // _t334
    char* _t338;                           // _t338
    signed int _t344;                      // _t344
    signed int _t345;                      // _t345
    signed int _t346;                      // _t346
    signed int _t347;                      // _t347
    signed int _t348;                      // _t348
    char* _t349;                           // _t349
    signed int _t350;                      // _t350
    void* _t351;          // _t351
    char* _t352;                           // _t352
    signed int _t354;                      // _t354
    char** _t355;                          // _t355
    signed int _t357;                      // _t357
    signed int _t358;                      // _t358
    signed int _t359;                      // _t359
    signed int _t362;                      // _t362
    signed int _t363;                      // _t363
    signed int _t364;                      // _t364
    char* _t365;                           // _t365
    char* _t366;                           // _t366
    char* _t367;                           // _t367
    signed int _t368;                      // _t368
    signed int _t370;                      // _t370
    signed char* _t371;                    // _t371
    char* _t372;                           // _t372
    signed int _t373;                      // _t373
    char* _t375;                           // _t375
    signed int _t377;                      // _t377

    _v64 = __eax;
    _v52 = __edx;
    _v60 = __ecx;
    if((__edx & 4) != 0) {
        _v76 = __esp;
        _t365 = __eax;
        _t209 = ___chkstk_ms(_strlen(__eax) + 16 >> 4 << 4);
        _t293 =  *_t365 & 255;
        __esp = __esp - _t209;
        __eflags = __esp;
        _t349 =  &_v112;
        _v72 =  &_v112;
        while(1) {
            _t304 =  &(_t365[1]);
            __eflags = _t293 - 127;
            if(_t293 == 127) {
                goto L22;
            }
L19:
            __eflags = _t294 - 123;
            if(_t294 == 123) {
                _t293 = _t365[1] & 255;
                _t322 = _t365;
                _v68 = _t365;
                _v48 = _t304;
                _t375 =  &(_t322[1]);
                _t316 = 1;
                _t210 = _t293;
                _v56 = 44;
                __eflags = _t210 - 123;
                if(__eflags == 0) {
L34:
                    _t210 = _t322[2] & 255;
                    _t316 = _t316 + 1;
                    _t322 = _t375;
L33:
                    _t375 =  &(_t322[1]);
                    __eflags = _t210 - 123;
                    if(__eflags == 0) {
                        goto L34;
                    }
                } else {
                }
                if(__eflags > 0) {
                    __eflags = _t210 - 125;
                    if(_t210 != 125) {
                        __eflags = _t210 - 127;
                        if(_t210 != 127) {
                            goto L31;
                        } else {
                            _t210 = _t322[2] & 255;
                            __eflags = _t210;
                            if(_t210 == 0) {
                                goto L32;
                            } else {
                                _t210 = _t322[3] & 255;
                                _t322 =  &(_t322[2]);
                            }
                        }
                        goto L33;
                    } else {
                        _t316 = _t316 - 1;
                        __eflags = _t316;
                        if(_t316 != 0) {
                            goto L31;
                        } else {
                            __eflags = _v56 - 123;
                            _t377 = _v68;
                            _t317 = _v48;
                            if(_v56 != 123) {
                                goto L59;
                            } else {
                                _v48 = _t349;
                                _t350 = _v52;
                                while(1) {
L39:
                                    _t287 = _v48;
                                    _t344 = 1;
                                    __eflags = _t293 - 127;
                                    if(_t293 == 127) {
                                        goto L56;
                                    } else {
                                    }
L41:
                                    _t377 = _t377 + 1;
                                    __eflags = _t377;
                                    _t318 = _t287;
L42:
                                    __eflags = _t293 - 125;
                                    if(_t293 == 125) {
                                        _t344 = _t344 - 1;
                                        __eflags = _t344;
                                        if(_t344 == 0) {
                                            _t288 = _t377;
                                            goto L74;
                                        } else {
                                             *_t318 = 125;
                                            _t287 = _t318 + 1;
                                            goto L55;
                                        }
                                        goto L159;
                                    } else {
                                        __eflags = _t293 - 44;
                                        if(_t293 != 44) {
L60:
                                            _t287 = _t318 + 1;
                                            __eflags = _t293 - 123;
                                            if(_t293 != 123) {
                                                 *_t318 = _t293;
                                                __eflags = _t293;
                                                if(_t293 != 0) {
                                                    goto L55;
                                                } else {
                                                    goto L68;
                                                }
                                            } else {
                                                 *_t318 = 123;
                                                _t344 = _t344 + 1;
L55:
                                                _t293 =  *(_t377 + 1) & 255;
                                                __eflags = _t293 - 127;
                                                if(_t293 != 127) {
                                                    goto L41;
                                                } else {
                                                    goto L56;
                                                }
                                            }
                                            goto L159;
                                        } else {
                                            __eflags = _t344 - 1;
                                            if(_t344 != 1) {
                                                goto L60;
                                            } else {
                                                _t347 = _t377;
                                                _t302 = 1;
                                                while(1) {
                                                    _t288 = _t347 + 1;
                                                    _t348 =  *(_t347 + 1) & 255;
                                                    __eflags = _t348 - 127;
                                                    if(_t348 == 127) {
                                                        goto L49;
                                                    }
L47:
L69:
                                                    __eflags = _t348 - 123;
                                                    if(_t348 == 123) {
                                                        _t302 = _t302 + 1;
                                                        _t347 = _t288;
                                                        _t288 = _t347 + 1;
                                                        _t348 =  *(_t347 + 1) & 255;
                                                        __eflags = _t348 - 127;
                                                        if(_t348 == 127) {
                                                            goto L49;
                                                        }
                                                        goto L51;
                                                    } else {
                                                        __eflags = _t348 - 125;
                                                        if(_t348 == 125) {
                                                            _t302 = _t302 - 1;
                                                            __eflags = _t302;
                                                            if(_t302 == 0) {
L74:
                                                                _t289 = _t288 + 1;
                                                                __eflags = _t289;
                                                                do {
                                                                    _t345 =  *_t289 & 255;
                                                                    _t318 = _t318 + 1;
                                                                    _t289 = _t289 + 1;
                                                                     *((char*)(_t318 - 1)) = _t345;
                                                                    __eflags = _t345;
                                                                } while(_t345 != 0);
                                                                _t346 = _t350;
                                                                _t350 = _t350 | 1;
                                                                _t292 = L00402820(_v72, _v60, _t346, _a4);
                                                                __eflags = _t292 - 1;
                                                                if(_t292 == 1) {
L68:
                                                                    _v48 = 1;
                                                                    goto L51;
                                                                } else {
                                                                    __eflags =  *_t377 - 44;
                                                                    if( *_t377 != 44) {
                                                                        _v48 = _t292;
                                                                        goto L51;
                                                                    } else {
                                                                        _t293 =  *(_t377 + 1) & 255;
                                                                        goto L39;
                                                                    }
                                                                }
                                                            } else {
                                                                _t347 = _t288;
                                                                while(1) {
                                                                    _t288 = _t347 + 1;
                                                                    _t348 =  *(_t347 + 1) & 255;
                                                                    __eflags = _t348 - 127;
                                                                    if(_t348 == 127) {
                                                                        goto L49;
                                                                    }
                                                                    goto L47;
                                                                }
                                                            }
                                                        } else {
                                                            __eflags = _t348;
                                                            if(_t348 == 0) {
L50:
                                                                 *_t318 = 0;
                                                                _v48 = 1;
                                                                goto L51;
                                                            } else {
                                                                _t347 = _t288;
                                                                while(1) {
                                                                    _t288 = _t347 + 1;
                                                                    _t348 =  *(_t347 + 1) & 255;
                                                                    __eflags = _t348 - 127;
                                                                    if(_t348 == 127) {
                                                                        goto L49;
                                                                    }
                                                                    goto L47;
                                                                    while(1) {
L49:
                                                                        __eflags =  *(_t288 + 1);
                                                                        if( *(_t288 + 1) == 0) {
                                                                            goto L50;
                                                                        }
                                                                        _t348 =  *((signed char*)(_t288 + 2)) & 255;
                                                                        _t288 = _t288 + 2;
                                                                        __eflags = _t348 - 127;
                                                                        if(_t348 != 127) {
                                                                            goto L69;
                                                                        } else {
                                                                            continue;
                                                                        }
                                                                        goto L51;
                                                                    }
                                                                    goto L50;
                                                                }
                                                            }
                                                        }
                                                    }
                                                    goto L159;
                                                }
                                            }
                                        }
                                    }
L51:
                                    __esp = _v76;
                                    goto L52;
L56:
                                    _t301 =  *(_t377 + 2) & 255;
                                     *_t287 = 127;
                                    _t318 = _t287 + 2;
                                     *((char*)(_t287 + 1)) = _t301;
                                    __eflags = _t301;
                                    if(_t301 == 0) {
                                         *(_t287 + 2) = 0;
                                        goto L68;
                                    } else {
                                        _t293 =  *(_t377 + 3) & 255;
                                        _t377 = _t377 + 3;
                                        goto L42;
                                    }
                                    goto L159;
                                }
                            }
                        }
                    }
                } else {
                    __eflags = _t210;
                    if(_t210 == 0) {
                        _t317 = _v48;
L59:
                         *_t349 = 123;
                        _t365 = _t317;
                        _t349 =  &(_t349[1]);
                        while(1) {
                            _t304 =  &(_t365[1]);
                            __eflags = _t293 - 127;
                            if(_t293 == 127) {
                                goto L22;
                            }
                            goto L19;
                        }
                    } else {
                        __eflags = _t210 - 44;
                        if(_t210 != 44) {
L31:
                            _t210 = _t322[2] & 255;
L32:
                            _t322 = _t375;
                        } else {
                            __eflags = _t316 - 1;
                            if(_t316 == 1) {
                                _t210 = _t322[2] & 255;
                                _v56 = 123;
                                _t322 = _t375;
                            } else {
                                goto L31;
                            }
                        }
                        goto L33;
                    }
                }
            } else {
L20:
                 *_t349 = _t294;
                _t211 =  &(_t349[1]);
                __eflags = _t294;
                if(_t294 == 0) {
                    __esp = _v76;
                    goto L1;
                } else {
                    _t294 = _t365[1] & 255;
                    _t365 = _t304;
                    _t349 = _t211;
                    _t304 =  &(_t365[1]);
                    __eflags = _t294 - 127;
                    if(_t294 != 127) {
                        goto L19;
                    } else {
                        goto L22;
                    }
                }
            }
            goto L159;
L22:
            _t294 = _t365[1] & 255;
             *_t349 = 127;
            __eflags = _t294;
            if(_t294 != 0) {
                _t349[1] = _t294;
                _t365 =  &(_t365[2]);
                _t293 =  *_t365 & 255;
                _t349 =  &(_t349[2]);
                continue;
            } else {
                _t286 =  &(_t365[2]);
                _t349 =  &(_t349[1]);
                _t365 = _t304;
                _t304 = _t286;
                goto L20;
            }
            goto L159;
        }
    } else {
L1:
        _t351 = _v64;
        _v72 = __esp;
        _t212 = _strlen(_t351);
        __esp = __esp - ___chkstk_ms(_t212 + 16 >> 4 << 4);
        _t219 = ___mingw_dirname(_memcpy( &_v112, _t351, _t212 + 1), _t218);
        _v32 = 0;
        _v68 = _t219;
        _t352 = _t219;
        _t221 = L004027D0( &_v44);
        _v48 = _t221;
        if(_t221 != 0) {
L79:
            __esp = _v72;
            return _v48;
        } else {
            if(_t352 == 0 || L00402680(_t352, _v52) == 0) {
                _t366 = _v68;
                _t295 = __esp;
                __esp = __esp - ___chkstk_ms(_strlen(_t366) + 16 >> 4 << 4);
                _t324 = _t366;
                _t305 =  &_v112;
                while(1) {
L6:
                    _t228 =  *_t324 & 255;
                    _t367 =  &(_t324[1]);
                    if(_t228 == 127) {
                        break;
                    }
                    _t305 =  &(_t305[1]);
                    _t324 = _t367;
                     *((char*)(_t305 - 1)) = _t228;
                    __eflags = _t228;
                    if(_t228 != 0) {
                        continue;
                    }
L8:
                    _t229 = _strdup( &_v112);
                    _v48 = 1;
                    __esp = _t295;
                    if(_t229 == 0) {
                        goto L79;
                    } else {
                        _v48 = L00402720(_t229,  &_v44);
                        goto L10;
                    }
                    goto L159;
                }
                _t281 = _t324[1] & 255;
                _t305 =  &(_t305[1]);
                _t324 =  &(_t324[2]);
                 *((char*)(_t305 - 1)) = _t281;
                if(_t281 != 0) {
                    goto L6;
                }
                goto L8;
            } else {
                 *__esp =  &_v44;
                _t285 = _v68;
                L00402820(_t285, _v60, _v52 | 128);
                _v48 = _t285;
L10:
                if(_v48 != 0) {
                    goto L79;
                } else {
                    _t231 =  *(_v64 + 1) & 255;
                    if(_t231 == 47 || _t231 == 92) {
L85:
                        _t233 = _strlen(_v68);
                        _t354 = _v64;
                        _t326 = _v64;
                        _t297 = _t354 + _t233;
                        _t234 =  *_t297 & 255;
                        __eflags = _t354 - _t297;
                        if(_t354 >= _t297) {
L90:
                            __eflags = _t234 - 47;
                            if(_t234 == 47) {
                                goto L93;
                            } else {
                                __eflags = _t234 - 92;
                                if(_t234 == 92) {
                                    goto L93;
                                } else {
                                    _v101 = 92;
                                }
                            }
                        } else {
                            while(1) {
                                __eflags = _t234 - 47;
                                if(_t234 == 47) {
                                    goto L93;
                                }
                                __eflags = _t234 - 92;
                                if(_t234 == 92) {
                                    goto L90;
                                } else {
                                    _t297 = _t297 - 1;
                                    _t234 =  *_t297 & 255;
                                    __eflags = _t326 - _t297;
                                    if(_t326 != _t297) {
                                        continue;
                                    } else {
                                        goto L90;
                                    }
                                }
                                goto L96;
                            }
                            do {
                                do {
L93:
                                    _t297 = _t297 + 1;
                                    _t327 = _t234;
                                    _t234 =  *_t297 & 255;
                                    __eflags = _t234 - 47;
                                } while(_t234 == 47);
                                __eflags = _t234 - 92;
                            } while(_t234 == 92);
                            _v101 = _t327;
                        }
                        goto L96;
                    } else {
                        _t274 = _v68;
                        if( *_t274 != 46 || _t274[1] != 0) {
                            goto L85;
                        } else {
                            if((_v52 & 16) != 0) {
                                _t363 = _v64;
                                _t275 = _t363;
                                L00402680(_t275, _v52);
                                _v48 = _t275;
                                __eflags = _t275;
                                if(_t275 == 0) {
                                     *__esp = _t363;
                                    _t300 = __esp;
                                    _strlen();
                                    _t278 = _t275 + 16 >> 4 << 4;
                                    ___chkstk_ms(_t278);
                                    __esp = __esp - _t278;
                                    _t314 = _t363;
                                    _t338 =  &_v112;
                                    do {
                                        _t279 =  *_t314 & 255;
                                        _t364 = _t314 + 1;
                                        __eflags = _t279 - 127;
                                        if(_t279 != 127) {
                                            _t314 = _t364;
                                        } else {
                                            _t279 =  *(_t314 + 1) & 255;
                                            _t314 = _t314 + 2;
                                        }
                                        _t338 =  &(_t338[1]);
                                         *((char*)(_t338 - 1)) = _t279;
                                        __eflags = _t279;
                                    } while(_t279 != 0);
                                    __eax = _strdup( &_v112);
                                    __esp = _t300;
                                    __eflags = _t279;
                                    if(_t279 == 0) {
                                        goto L130;
                                    } else {
                                        __eflags = _a4;
                                        if(_a4 == 0) {
                                            goto L130;
                                        } else {
                                            L00402720(_t279, _a4);
                                            _t355 = _v36;
                                        }
                                    }
                                } else {
                                    _t297 = _v64;
                                    goto L16;
                                }
                            } else {
L16:
                                _v101 = 92;
                                _v68 = 0;
L96:
                                _t355 = _v36;
                                _v48 = 2;
                                _t235 =  *_t355;
                                if(_t235 != 0) {
                                    _v76 = _t297;
                                    _t298 = _t355;
                                    _v64 = _v52 & 32768;
                                    do {
                                        if(_v48 == 1) {
L102:
                                            _v48 = 1;
                                        } else {
                                             *__esp = _t235;
                                            ___mingw_opendir();
                                            _v56 = _t235;
                                            if(_t235 == 0) {
                                                __eflags = _v52 & 4;
                                                if((_v52 & 4) != 0) {
                                                    goto L102;
                                                } else {
                                                    _t358 = _v60;
                                                    __eflags = _t358;
                                                    if(_t358 != 0) {
                                                        __errno();
                                                        _v120 =  *_t235;
                                                        _t240 =  *_t298;
                                                         *__esp = _t240;
                                                         *_t358();
                                                        __eflags = _t240;
                                                        if(_t240 != 0) {
                                                            goto L102;
                                                        }
                                                    }
                                                }
                                            } else {
                                                _v80 = 0;
                                                if(_v68 != 0) {
                                                    _t273 =  *_t298;
                                                    __eax = _strlen(_t273);
                                                    _v80 = _t273;
                                                }
                                                _v84 = 0;
                                                _v100 = _v80 + 2;
                                                while(1) {
L109:
                                                    _t244 = _v56;
                                                    ___mingw_readdir(_t244);
                                                    _t368 = _t244;
                                                    if(_t244 == 0) {
                                                        break;
                                                    }
                                                    if(_v64 == 0 ||  *((intOrPtr*)(_t368 + 8)) == 16) {
                                                        _t357 = _t368 + 12;
                                                        _t248 = _v76;
                                                        L00402450(_t248, _v52, _t357);
                                                        if(_t248 != 0) {
                                                            continue;
                                                        } else {
                                                            _t310 =  *(_t368 + 6) & 65535;
                                                            _v88 = __esp;
                                                            _t252 = _t310 + _v100 + 15 >> 4 << 4;
                                                            ___chkstk_ms(_t252);
                                                            __esp = __esp - _t252;
                                                            _t330 =  &_v112;
                                                            _v92 =  &_v112;
                                                            _t253 =  &_v112;
                                                            if(_v80 != 0) {
                                                                _t370 = _v80;
                                                                _v108 = _t310;
                                                                 *__esp =  &_v112;
                                                                _v116 = _t370;
                                                                _v120 =  *_t298;
                                                                _v96 =  &_v112;
                                                                _memcpy();
                                                                _t255 =  *(__esp + _t370 + 11) & 255;
                                                                _t330 = _v96;
                                                                _t310 = _v108;
                                                                __eflags = _t255 - 47;
                                                                if(_t255 == 47) {
L147:
                                                                    _t253 =  &(_t330[_v80]);
                                                                    goto L114;
                                                                } else {
                                                                    __eflags = _t255 - 92;
                                                                    if(_t255 == 92) {
                                                                        goto L147;
                                                                    } else {
                                                                        _t373 = _v80;
                                                                        _t330[_t373] = _v101 & 255;
                                                                        _t253 =  &(_t330[_t373 + 1]);
                                                                        goto L114;
                                                                    }
                                                                }
                                                                goto L129;
                                                            }
L114:
                                                            _v96 = _t330;
                                                            _v116 = _t310 + 1;
                                                            _v120 = _t357;
                                                            _t359 = __esp;
                                                             *__esp = _t253;
                                                            _memcpy();
                                                            __eax = _strlen(_v96);
                                                            _t259 =  &(_t253[0x10]) >> 4 << 4;
                                                            ___chkstk_ms(_t259);
                                                            _t371 = _v92;
                                                            __esp = __esp - _t259;
                                                            _v96 =  &_v112;
                                                            _t332 =  &_v112;
                                                            while(1) {
L116:
                                                                _t261 =  *_t371 & 255;
                                                                _t312 =  &(_t371[1]);
                                                                if(_t261 == 127) {
                                                                    break;
                                                                }
                                                                _t332 =  &(_t332[1]);
                                                                _t371 = _t312;
                                                                 *((char*)(_t332 - 1)) = _t261;
                                                                __eflags = _t261;
                                                                if(_t261 != 0) {
                                                                    continue;
                                                                }
L118:
                                                                _t262 = _v96;
                                                                __eax = _strdup(_t262);
                                                                __esp = _t359;
                                                                _t372 = _t262;
                                                                if(_t262 == 0) {
                                                                    _v48 = 3;
                                                                } else {
                                                                    _t265 = 0xffffffffffffffff;
                                                                    _v48 = _v48 & _t265;
                                                                    if((_v52 & 64) == 0) {
                                                                        _t362 = _v84;
                                                                        __eflags = _t362;
                                                                        if(_t362 == 0) {
                                                                            __eax = _malloc(12);
                                                                            _v84 = _t265;
                                                                            __eflags = _t265;
                                                                            if(_t265 != 0) {
                                                                                _t266 = _v84;
                                                                                 *(_t266 + 8) = _t372;
                                                                                 *(_t266 + 4) = 0;
                                                                                 *_t266 = 0;
                                                                            }
                                                                        } else {
                                                                            _v92 = _t298;
                                                                            _t299 = _v52 & 16384;
                                                                            while(1) {
                                                                                _t269 =  *(_t362 + 8);
                                                                                 *__esp = _t372;
                                                                                _v120 = _t269;
                                                                                __eflags = _t299;
                                                                                if(_t299 != 0) {
                                                                                    _strcoll();
                                                                                } else {
                                                                                    _stricoll();
                                                                                }
                                                                                _t313 =  *_t362;
                                                                                _t333 =  *(_t362 + 4);
                                                                                __eflags = _t269;
                                                                                if(_t269 <= 0) {
                                                                                    _t333 = _t313;
                                                                                }
                                                                                __eflags = _t333;
                                                                                if(_t333 == 0) {
                                                                                    break;
                                                                                }
                                                                                _t362 = _t333;
                                                                            }
                                                                            _t298 = _v92;
                                                                            _v92 = _t269;
                                                                            __eax = _malloc(12);
                                                                            _t334 = _v92;
                                                                            __eflags = _t269;
                                                                            if(_t269 != 0) {
                                                                                 *(_t269 + 8) = _t372;
                                                                                 *(_t269 + 4) = 0;
                                                                                 *_t269 = 0;
                                                                                __eflags = _t334;
                                                                                if(_t334 <= 0) {
                                                                                     *_t362 = _t269;
                                                                                } else {
                                                                                     *(_t362 + 4) = _t269;
                                                                                }
                                                                            }
                                                                        }
                                                                    } else {
                                                                        if(_a4 != 0) {
                                                                            L00402720(_t372, _a4);
                                                                        }
                                                                    }
                                                                }
                                                                __esp = _v88;
                                                                goto L109;
                                                            }
                                                            _t271 = _t371[1] & 255;
                                                            _t332 =  &(_t332[1]);
                                                            _t371 =  &(_t371[2]);
                                                             *((char*)(_t332 - 1)) = _t271;
                                                            if(_t271 != 0) {
                                                                goto L116;
                                                            }
                                                            goto L118;
                                                        }
                                                    } else {
                                                        continue;
                                                    }
                                                    goto L129;
                                                }
                                                ___mingw_closedir(_v56);
                                                __eflags = _v84;
                                                if(_v84 != 0) {
                                                    L00402780(_v84, _a4);
                                                }
                                            }
                                        }
                                        goto L103;
L103:
                                        _t237 =  *_t298;
                                        _t298 =  &(_t298[1]);
                                        ___mingw_aligned_free(_t237);
                                        _t235 =  *_t298;
                                        __eflags = _t235;
                                    } while(_t235 != 0);
L130:
                                    _t355 = _v36;
                                }
                            }
                        }
                    }
L129:
                    ___mingw_aligned_free(_t355);
                    __esp = _v72;
L52:
                    return _v48;
                }
            }
        }
    }
L159:
}

___mingw_glob(
    char* _a4,                             // _cfa_4
    signed int _a8,                        // _cfa_8
    signed int _a12,                       // _cfa_c
    signed int _a16                        // _cfa_10
)
{// addr = 0x004030C0
    _unknown_ _v16;                        // _cfa_fffffff0
    intOrPtr _v32;                         // _cfa_ffffffe0
    char* _v36;                            // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    char _v56;                             // _cfa_ffffffc8
    char* __ebx;                           // r1
    _unknown_ __edi;                       // r4
    signed int __esi;                      // r5
    signed int _t25;                       // _t25
    _unknown_ _t31;                        // _t31
    signed int _t33;                       // _t33
    char* _t35;                            // _t35
    signed int _t37;                       // _t37
    intOrPtr _t41;                         // _t41
    intOrPtr _t42;                         // _t42
    char* _t44;                            // _t44
    signed int _t46;                       // _t46
    char* _t48;                            // _t48

    __esi = _a16;
    __ebx = _a4;
    _t46 = _a8;
    if(__esi != 0 && (_t46 & 2) == 0) {
         *((intOrPtr*)(__esi + 12)) = 0;
    }
    if( *__esi != "glob-1.0-mingw32") {
        L004027D0(__esi);
         *__esi = "glob-1.0-mingw32";
    }
    _t25 = L00402820(__ebx, _a12, _t46, __esi);
    _t41 = _t25;
    if(_t25 == 2) {
        if((_t46 & 16) == 0) {
            goto L5;
        }
        _v40 = _t25;
        _v32 = __esp;
        _t31 = ___chkstk_ms(_strlen(__ebx) + 16 >> 4 << 4);
        _t42 = _v40;
        __esp = __esp - _t31;
        _v36 =  &_v56;
        _t44 =  &_v56;
        while(1) {
L10:
            _t33 =  *__ebx & 255;
            _t48 =  &(__ebx[1]);
            if(_t33 == 127) {
                break;
            }
            _t44 = _t44 + 1;
            __ebx = _t48;
             *((char*)(_t44 - 1)) = _t33;
            if(_t33 == 0) {
L12:
                _v40 = _t42;
                _t35 = _strdup(_v36);
                __esp = _v32;
                _t41 = _v40;
                if(_t35 != 0) {
                    _v32 = _t41;
                    L00402720(_t35, __esi);
                    _t41 = _v32;
                }
                goto L5;
            }
        }
        _t37 = __ebx[1] & 255;
        _t44 = _t44 + 1;
        __ebx =  &(__ebx[2]);
         *((char*)(_t44 - 1)) = _t37;
        if(_t37 != 0) {
            goto L10;
        }
        goto L12;
    }
L5:
    return _t41;
}

char* ___mingw_dirname(
    char* __eax,                           // r0
    char* _a4                              // _cfa_4
)
{// addr = 0x00403220
    _unknown_ _v16;                        // _cfa_fffffff0
    int _v32;                              // _cfa_ffffffe0
    signed int _v34;                       // _cfa_ffffffde
    char** _v40;                           // _cfa_ffffffd8
    int _v44;                              // _cfa_ffffffd4
    long _v48;                             // _cfa_ffffffd0
    _unknown_ _v52;                        // _cfa_ffffffcc (outparam)
    char* _v56;                            // _cfa_ffffffc8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __esi;                       // r5
    char* _t82;                            // _t82
    int _t88;                              // _t88
    signed int _t94;                       // _t94
    signed int _t95;                       // _t95
    int _t96;                              // _t96
    signed int _t97;                       // _t97
    signed int _t99;                       // _t99
    signed int _t102;                      // _t102
    signed int _t104;                      // _t104
    signed int _t105;                      // _t105
    char* _t109;                           // _t109
    signed int _t112;                      // _t112
    char* _t117;                           // _t117
    signed int _t118;                      // _t118
    signed int _t120;                      // _t120
    long* _t121;                           // _t121
    signed int _t123;                      // _t123
    signed int _t126;                      // _t126
    signed int _t127;                      // _t127
    signed int _t128;                      // _t128
    long* _t131;                           // _t131
    signed int _t132;                      // _t132
    int _t134;                             // _t134
    int _t136;                             // _t136
    char* _t137;                           // _t137
    signed int _t138;                      // _t138
    long* _t140;                           // _t140
    signed int _t141;                      // _t141

    _v56 = 0;
     *__esp = 2;
    _setlocale();
    _t117 = __eax;
    if(__eax != 0) {
        _t117 = _strdup(__eax);
    }
    _v56 = 4215336;
     *__esp = 2;
    _setlocale();
    if(_a4 == 0 ||  *_a4 == 0) {
L4:
        _t136 = _wcstombs(0, 4215338, 0) + 1;
        _t82 = ___mingw_realloc( *4223080, _t136);
         *4223080 = _t82;
        _wcstombs(_t82, 4215338, _t136);
        _v56 = _t117;
         *__esp = 2;
        _setlocale();
        ___mingw_aligned_free(_t117);
        _t137 =  *4223080;
        goto L5;
    } else {
        _v40 = __esp;
        _t88 = _mbstowcs(0, _a4, 0);
        __esp = __esp - ___chkstk_ms(_t88 + _t88 + 17 >> 4 << 4);
        _t94 = _mbstowcs( &_v48, _a4, _t88);
        __eflags = _t94 - 1;
        _v44 = _t94;
         *((short*)( &_v48 + _t94 * 2)) = 0;
        _t95 = _v48 & 65535;
        if(_t94 <= 1) {
            _v34 = _t95;
            _v32 =  &_v48;
L12:
            __eflags = _v34;
            if(_v34 != 0) {
                _t96 = _v32;
                _t126 = _v34 & 65535;
                _t120 = _t96;
                do {
                    __eflags = _t126 - 47;
                    if(_t126 != 47) {
                        _t138 = _t96;
                        __eflags = _t126 - 92;
                        if(_t126 == 92) {
L21:
                            _t127 =  *_t96 & 65535;
                            __eflags = _t127 - 47;
                            if(_t127 == 47) {
L20:
                                _t96 =  &(2[_t96]);
                                __eflags = _t96;
                                goto L21;
                            }
L22:
                            __eflags = _t127 - 92;
                            if(_t127 == 92) {
                                goto L20;
                            }
                            _t138 = _t96;
                            __eflags = _t127;
                            if(_t127 == 0) {
                                break;
                            }
                            _t120 = _t96;
                        }
                        goto L16;
                    }
                    _t127 =  *_t96 & 65535;
                    __eflags = _t127 - 47;
                    if(_t127 != 47) {
                        goto L22;
                    }
                    goto L20;
L16:
                    _t126 = 2[_t138] & 65535;
                    _t96 =  &(2[_t96]);
                    __eflags = _t126;
                } while(_t126 != 0);
                __eflags = _v32 - _t120;
                if(_v32 < _t120) {
                    while(1) {
                        _t97 = _t120;
                        _t120 = _t120 - 2;
                        __eflags = _v32 - _t120;
                        if(__eflags >= 0) {
                            break;
                        }
                        _t104 =  *_t120 & 65535;
                        __eflags = _t104 - 47;
                        if(_t104 == 47) {
                            continue;
                        }
                        __eflags = _t104 - 92;
                        if(_t104 == 92) {
                            continue;
                        }
L35:
                        2[_t120] = 0;
                        _t99 = _v48 & 65535;
                        _t121 =  &_v48;
                        __eflags = _t99 - 47;
                        if(_t99 == 47) {
                            goto L38;
                            do {
                                do {
L38:
                                    _t128 = _t121[0] & 65535;
                                    _t121 =  &(_t121[0]);
                                    __eflags = _t128 - 47;
                                } while(_t128 == 47);
                                __eflags = _t128 - 92;
                            } while(_t128 == 92);
                            __eflags = _t121 -  &_v48 - 4;
                            if(_t121 -  &_v48 <= 4) {
L58:
                                __eflags = ((long*)( &_v48))[0] - _t99;
                                if(((long*)( &_v48))[0] != _t99) {
                                    goto L41;
                                }
                                _t99 =  *_t121 & 65535;
L42:
                                __eflags = _t99;
                                if(_t99 == 0) {
L62:
                                     *_t121 = 0;
                                    _t102 = _wcstombs(_a4,  &_v48, _v44);
                                    _t137 = _a4;
                                    __eflags = _t102 - -1;
                                    if(_t102 != -1) {
                                        _t137[_t102] = 0;
                                    }
L30:
                                    _v56 = _t117;
                                     *__esp = 2;
                                    _setlocale();
                                    ___mingw_aligned_free(_t117);
L31:
                                    __esp = _v40;
L5:
                                    return _t137;
                                }
                                _v32 = _t117;
                                _t131 = _t121;
                                do {
                                    _t121 =  &(_t121[0]);
                                     *(_t121 - 2) = _t99;
                                    __eflags = _t99 - 47;
                                    if(_t99 != 47) {
                                        _t118 = _t131[0] & 65535;
                                        _t140 =  &(_t131[0]);
                                        __eflags = _t99 - 92;
                                        if(_t99 == 92) {
                                            _t131 = _t140;
L49:
                                            __eflags = _t118 - 92;
                                            if(_t118 == 92) {
                                                goto L52;
                                                do {
                                                    do {
L52:
                                                        _t99 = _t131[0] & 65535;
                                                        _t131 =  &(_t131[0]);
                                                        __eflags = _t99 - 47;
                                                    } while(_t99 == 47);
                                                    __eflags = _t99 - 92;
                                                } while(_t99 == 92);
                                                goto L46;
                                            }
                                            _t99 = _t118;
                                            __eflags = _t118 - 47;
                                            if(_t118 != 47) {
                                                goto L46;
                                            }
                                            goto L52;
                                        }
                                        _t99 = _t118;
                                        _t131 = _t140;
                                        goto L46;
                                    }
                                    _t118 =  *_t131 & 65535;
                                    goto L49;
L46:
                                    __eflags = _t99;
                                } while(_t99 != 0);
                                _t117 = _v32;
                                goto L62;
                            }
L41:
                            _t121 =  &_v48;
                            goto L42;
                        }
                        __eflags = _t99 - 92;
                        if(_t99 != 92) {
                            goto L58;
                        }
                        goto L38;
                    }
                    if(__eflags != 0) {
                        goto L35;
                    }
                    _t141 = _v34 & 65535;
                    __eflags = _t141 - 47;
                    if(_t141 == 47) {
L67:
                        __eflags = 2[_t120] - (_v34 & 65535);
                        if(2[_t120] == (_v34 & 65535)) {
                            _t132 =  *(_t120 + 4) & 65535;
                            __eflags = _t132 - 47;
                            if(_t132 != 47) {
                                __eflags = _t132 - 92;
                                if(_t132 != 92) {
                                    _t120 = _t97;
                                }
                            }
                        }
                        goto L35;
                    }
                    __eflags = _t141 - 92;
                    if(_t141 != 92) {
                        goto L35;
                    }
                    goto L67;
                }
                _t105 = _v34 & 65535;
                __eflags = _t105 - 47;
                if(_t105 != 47) {
                    __eflags = _t105 - 92;
                    if(_t105 != 92) {
                         *_v32 = 46;
                    }
                }
                __eflags = 0;
                2[_v32] = 0;
                _t134 = _wcstombs(0,  &_v48, 0) + 1;
                _v56 = _t134;
                _v32 = _t134;
                 *__esp =  *4223080;
                _t109 = ___mingw_realloc();
                 *4223080 = _t109;
                _t137 = _t109;
                _wcstombs(_t109,  &_v48, _v32);
                goto L30;
            } else {
                __esp = _v40;
                goto L4;
            }
        }
        _t123 = _t95;
        _v34 = _t95;
        _t112 = ( &_v48)[0] & 65535;
        _v32 =  &_v48;
        __eflags = _t123 - 47;
        if(_t123 == 47) {
L55:
            __eflags = _v34 - _t112;
            if(_v34 != _t112) {
                goto L12;
            }
            __eflags = ( &_v48)[1];
            if(( &_v48)[1] != 0) {
                goto L12;
            }
            _v56 = _t117;
             *__esp = 2;
            _setlocale();
            ___mingw_aligned_free(_t117);
            _t137 = _a4;
            goto L31;
        }
        __eflags = _t123 - 92;
        if(_t123 == 92) {
            goto L55;
        } else {
            __eflags = _t112 - 58;
            if(_t112 == 58) {
                _v32 =  &(( &_v48)[1]);
                _v34 = ((long*)( &_v48))[1] & 65535;
            }
            goto L12;
        }
    }
}

L00403640(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx                        // r3
)
{
    signed char _v296;                     // _cfa_fffffed8
    char _v332;                            // _cfa_fffffeb4
    signed int _v340;                      // _cfa_fffffeac
    char* _v344;                           // _cfa_fffffea8
    _unknown_ __ebx;                       // r1
    signed int _t17;                       // _t17
    signed char _t19;                      // _t19
    _unknown_ _t21;                        // _t21
    signed short _t22;                     // _t22
    signed int _t24;                       // _t24

    __esp = __esp - 340;
     *__esp = __eax;
    _v344 =  &_v332;
    _FindFirstFileA$8();
    __esp = __esp - 8;
    if(__eax == -1) {
        _GetLastError$0();
        __errno();
         *__eax = __eax;
        if(__eax == 3) {
            __errno();
             *__eax = 2;
        } else {
            __errno();
            if( *__eax == 267) {
                __errno();
                 *__eax = 20;
            } else {
                __errno();
                if( *__eax != 2) {
                    __errno();
                     *__eax = 22;
                }
            }
        }
        goto L7;
    } else {
        __ecx = __edx + 12;
         *(__edx + 6) = 0;
        _t17 = _v296 & 255;
         *((char*)(__edx + 12)) = _t17;
        if(_t17 != 0) {
            _t21 = 0;
            do {
                _t22 = _t21 + 1;
                 *(__edx + 6) = _t22;
                _t24 =  *(__esp + (_t22 & 65535) + 60) & 255;
                asm("adc ecx, 0x0");
                 *__ecx = _t24;
            } while(_t24 != 0);
        }
        _t19 = _v340 & 88;
        if(_t19 > 16) {
             *((intOrPtr*)(__edx + 8)) = 24;
            __esp = __esp + 340;
            return __eax;
        } else {
             *((intOrPtr*)(__edx + 8)) = _t19;
L7:
            __esp = __esp + 340;
            return __eax;
        }
    }
}

L00403730(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx                        // r3
)
{
    signed char _v296;                     // _cfa_fffffed8
    char _v332;                            // _cfa_fffffeb4
    signed int _v340;                      // _cfa_fffffeac
    char* _v344;                           // _cfa_fffffea8
    signed int _t18;                       // _t18
    signed char _t20;                      // _t20
    signed int _t22;                       // _t22
    signed short _t23;                     // _t23
    signed int _t25;                       // _t25

    __esp = __esp - 340;
     *__esp = __eax;
    _v344 =  &_v332;
    _FindNextFileA$8();
    __esp = __esp - 8;
    if(__eax == 0) {
        _GetLastError$0();
        if(__eax == 18) {
            goto L7;
        } else {
            __errno();
             *__eax = 2;
            __esp = __esp + 340;
            return __eax;
        }
    } else {
        __ecx = __edx + 12;
         *(__edx + 6) = 0;
        _t18 = _v296 & 255;
         *((char*)(__edx + 12)) = _t18;
        if(_t18 != 0) {
            _t22 = 0;
            while(1) {
                _t23 = _t22 + 1;
                 *(__edx + 6) = _t23;
                _t25 =  *(__esp + (_t23 & 65535) + 60) & 255;
                asm("adc ecx, 0x0");
                 *__ecx = _t25;
                if(_t25 == 0) {
                    goto L5;
                }
                _t22 =  *(__edx + 6) & 65535;
            }
        }
L5:
        _t20 = _v340 & 88;
        if(_t20 > 16) {
             *((intOrPtr*)(__edx + 8)) = 24;
            __esp = __esp + 340;
            return __eax;
        } else {
             *((intOrPtr*)(__edx + 8)) = _t20;
L7:
            __esp = __esp + 340;
            return __eax;
        }
    }
}

void* ___mingw_opendir()
{// addr = 0x004037F0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    void* __esi;          // r5
    void* _t37;           // _t37
    unsigned int _t42;                     // _t42
    void* _t43;           // _t43
    unsigned int _t46;                     // _t46
    void* _t48;           // _t48
    void* _t49;           // _t49
    intOrPtr _t50;                         // _t50
    unsigned int _t55;                     // _t55
    void* _t58;           // _t58
    unsigned int _t59;                     // _t59
    signed int _t63;                       // _t63
    signed char _t67;                      // _t67
    signed int _t70;                       // _t70
    signed int _t72;                       // _t72
    void* _t74;           // _t74
    signed int _t76;                       // _t76
    signed int _t82;                       // _t82
    void* _t86;           // _t86

    __esp = __esp - 300;
    _t37 = __esp[0x50];
    if(_t37 == 0) {
        __errno();
        _t86 = 0;
         *_t37 = 22;
        goto L20;
    } else {
        if( *_t37 == 0) {
            __errno();
             *_t37 = 2;
            __esp =  &(__esp[0x4b]);
            return 0;
        } else {
            __esi =  &(__esp[7]);
            __esp[2] = 260;
            __esp[1] = _t37;
             *__esp = __esi;
            __fullpath();
            _t74 = __esi;
            if(__esp[7] == 0) {
                do {
                    _t63 =  *_t74;
                    _t74 = _t74 + 4;
                    _t42 = _t63 - 16843009 &  !_t63 & -2139062144;
                } while(_t42 == 0);
                if((_t42 & 32896) == 0) {
                    _t42 = _t42 >> 16;
                    _t74 = _t74 + 2;
                }
                _t43 = _t74;
                asm("sbb eax, 0x3");
            } else {
                do {
                    _t70 =  *_t74;
                    _t74 = _t74 + 4;
                    _t55 = _t70 - 16843009 &  !_t70 & -2139062144;
                } while(_t55 == 0);
                if((_t55 & 32896) == 0) {
                    _t55 = _t55 >> 16;
                    _t74 = _t74 + 2;
                }
                asm("sbb edx, 0x3");
                _t82 = _t74 - __esi;
                _t72 =  *(__esp + _t82 + 27) & 255;
                _t43 = __esi + _t82;
                if(_t72 != 47 && _t72 != 92) {
                     *_t43 = 92;
                    _t43 = __esi + _t82 + 1;
                }
            }
            _t58 = __esi;
             *_t43 = 42;
            goto L12;
            do {
            } while();
            goto L20;
L12:
            _t76 =  *_t58;
            _t58 = _t58 + 4;
            _t46 = _t76 - 16843009 &  !_t76 & -2139062144;
            if(_t46 == 0) {
                goto L12;
            } else {
                if((_t46 & 32896) == 0) {
                    _t46 = _t46 >> 16;
                    _t58 = _t58 + 2;
                }
                asm("sbb ebx, 0x3");
                _t59 = _t58 - __esi;
                _t48 = _malloc(_t59 + 284);
                _t86 = _t48;
                if(_t48 == 0) {
                    __errno();
                     *_t48 = 12;
                } else {
                    _t67 = _t59 + 1;
                    _t49 = _t48 + 280;
                    if(_t67 < 4) {
                        if(_t67 != 0) {
                             *_t49 =  *__esi & 255;
                            if((_t67 & 2) != 0) {
                                 *((short*)(_t49 + _t67 - 2)) =  *(__esi + _t67 - 2) & 65535;
                            }
                        }
                    } else {
                         *((intOrPtr*)(_t49 + _t67 - 4)) =  *((intOrPtr*)(__esp + _t67 + 24));
                        _t49 = _memcpy(_t49, __esi, _t59 >> 2 << 2);
                    }
                    _t50 = L00403640(_t49, _t86);
                     *((intOrPtr*)(_t86 + 272)) = _t50;
                    if(_t50 == -1) {
                         *__esp = _t86;
                        _t86 = 0;
                        ___mingw_aligned_free();
                    } else {
                         *_t86 = 0;
                         *((intOrPtr*)(_t86 + 276)) = 0;
                         *((short*)(_t86 + 4)) = 272;
                    }
                }
            }
L20:
            __esp =  &(__esp[0x4b]);
            return _t86;
        }
    }
}

signed int ___mingw_readdir(
    signed int _a4                         // _cfa_4
)
{// addr = 0x004039F0
    signed int __ebx;                      // r1
    signed int _t6;                        // _t6
    signed int _t9;                        // _t9
    intOrPtr _t11;                         // _t11

    __esp = __esp - 8;
    _t6 = _a4;
    if(_t6 == 0) {
        __errno();
        __ebx = 0;
         *_t6 = 9;
    } else {
        _t11 =  *((intOrPtr*)(_t6 + 276));
        __ebx = _t6;
         *((intOrPtr*)(_t6 + 276)) = _t11 + 1;
        if(_t11 > 0) {
            _t9 = L00403730( *((intOrPtr*)(_t6 + 272)), __ebx);
            asm("sbb eax, eax");
            __ebx = __ebx &  !_t9;
        }
    }
    __esp = __esp + 8;
    return __ebx;
}

___mingw_closedir(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00403A40
    intOrPtr __ebx;                        // r1
    intOrPtr* _t3;                         // _t3

    __ebx = _a4;
    if(__ebx == 0) {
L4:
        __errno();
         *_t3 = 9;
        return -1;
    }
    _t3 =  *((intOrPtr*)(__ebx + 272));
     *__esp = _t3;
    _FindClose$4();
    __esp = __esp - 4;
    if(_t3 == 0) {
        goto L4;
    }
    ___mingw_aligned_free(__ebx);
    return 0;
}

___mingw_rewinddir(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00403A90
    intOrPtr __ebx;                        // r1
    intOrPtr* _t6;                         // _t6
    intOrPtr _t8;                          // _t8

    __ebx = _a4;
    if(__ebx == 0) {
L2:
        __errno();
         *_t6 = 9;
        return _t6;
    }
    _t6 =  *((intOrPtr*)(__ebx + 272));
     *__esp = _t6;
    _FindClose$4();
    __esp = __esp - 4;
    if(_t6 != 0) {
        __edx = __ebx;
        _t8 = L00403640(__ebx + 280, __ebx);
         *((intOrPtr*)(__ebx + 272)) = _t8;
        if(_t8 == -1) {
            return _t8;
        } else {
             *((intOrPtr*)(__ebx + 276)) = 0;
            return _t8;
        }
    }
    goto L2;
}

signed int ___mingw_memalign_base()
{// addr = 0x00403BA0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t20;                       // _t20
    signed int _t23;                       // _t23
    signed int _t25;                       // _t25
    signed int _t30;                       // _t30
    signed int _t31;                       // _t31
    signed int _t34;                       // _t34
    signed int _t35;                       // _t35
    intOrPtr _t36;                         // _t36
    _unknown_ _t38;                        // _t38

    _t20 = __esp[7];
    if(_t20 == 0) {
L13:
        return _t20;
    }
    _t36 = ___mingw_memalign_lwm;
    if(_t36 == 0 || _t36 + 8 > _t20) {
        goto L13;
    } else {
        _t34 = __esp[8];
        _t30 =  *(_t20 - 4 & -4);
        _t23 = _t30 & 3;
        _t25 = _t30 & -4;
         *(_t34 + 4) = _t23;
         *_t34 = _t25;
        if(_t36 > _t25 || _t25 > _t20 - 8) {
            goto L13;
        } else {
            __esp[1] = _t25;
            if((_t30 & 1) == 0) {
                 *__esp = -8;
                _t38 = 15;
                _t35 = 8;
            } else {
                _t35 =  *_t25;
                _t38 = _t35 + 7;
                 *__esp =  ~_t35;
            }
             *(__esp[8] + 8) = _t35;
            _t31 = _t30 & 2;
            if(_t31 != 0) {
                _t31 =  *(_t25 + (_t23 + 1 >> 2) * 4);
                _t25 = _t25 + _t31;
            }
             *(__esp[8] + 12) = _t31;
            if(_t23 == 3) {
                _t38 = _t35 + 11;
            }
            if(_t20 != ( *__esp & _t25 + _t38) - _t31) {
                goto L13;
            } else {
                return __esp[1];
            }
        }
    }
}

___mingw_realloc(
    void* _a4,            // _cfa_4
    int _a8                                // _cfa_8
)
{// addr = 0x00403C60
    intOrPtr _v16;                         // _cfa_fffffff0
    char _v28;                             // _cfa_ffffffe4
    _unknown_ _v36;                        // _cfa_ffffffdc (outparam)
    char* _v40;                            // _cfa_ffffffd8 (outparam)
    void* __ebx;          // r1
    int __esi;                             // r5
    void* _t10;           // _t10
    intOrPtr* _t11;                        // _t11
    _unknown_ _t12;                        // _t12

    __esp = __esp - 32;
    __ebx = _a4;
    __esi = _a8;
    if(__ebx == 0) {
L6:
        _t10 = realloc(__ebx, __esi);
        __esp =  &(__esp[8]);
        return _t10;
    } else {
         *__esp = __ebx;
        _v40 =  &_v28;
        _t11 = ___mingw_memalign_base();
        if(__ebx == _t11) {
            goto L6;
        } else {
            if(__esi == 0) {
                __ebx = _v28;
                goto L6;
            } else {
                if(_v16 < __esi) {
                    _t12 = ___mingw_memalign_realloc(__ebx,  &_v28, __esi);
                    __esp =  &(__esp[8]);
                    return _t12;
                } else {
                    __errno();
                     *_t11 = 22;
                    __esp =  &(__esp[8]);
                    return 0;
                }
            }
        }
    }
}

void* ___mingw_memalign_realloc(
    intOrPtr _a4,                          // _cfa_4
    signed int* _a8,                       // _cfa_8
    int _a12                               // _cfa_c
)
{// addr = 0x00403CE0
    _unknown_ _v36;                        // _cfa_ffffffdc (outparam)
    _unknown_ _v40;                        // _cfa_ffffffd8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed int _t19;                       // _t19
    signed int _t25;                       // _t25
    void* _t28;           // _t28
    _unknown_ _t31;                        // _t31
    void* _t36;           // _t36
    _unknown_ _t39;                        // _t39
    signed int _t40;                       // _t40
    signed int _t41;                       // _t41
    signed int _t43;                       // _t43
    int _t44;                              // _t44
    _unknown_ _t45;                        // _t45
    signed int* _t46;                      // _t46
    void* _t48;           // _t48
    signed int _t49;                       // _t49

    _push(_t45);
    _push(_t31);
    __esp = __esp - 28;
    _t46 = _a8;
    _t19 =  *_t46;
     *__esp = _t19;
    __msize();
    _t40 = _t46[2];
    _t43 = _t19;
    _t32 = _t40 + 7;
    if((_t46[1] & 3) == 3) {
        _t32 = _t40 + 11;
    }
    _t25 = realloc( *_t46, _a12 + _t32);
    _t41 =  *_t46;
    if(_t41 == _t25) {
        __esp =  &(__esp[7]);
        _pop(__ebx);
        _pop(__esi);
        return _a4;
    } else {
        _t48 = 0;
        if(_t25 != 0) {
            _t49 = ___mingw_memalign_lwm;
            _t39 = _a4 - _t41;
            if(_t49 != 0) {
                if(_t49 <= _t25) {
                    goto L6;
                } else {
                    goto L5;
                }
                goto L15;
            } else {
L5:
                ___mingw_memalign_lwm = _t25;
            }
L6:
            _t28 = _t25 + _t39;
             *_t46 = _t46[1] | _t25;
            _t36 = (_t32 + _t46[3] + _t25 &  ~(_t46[2])) - _t46[3];
            _t48 = _t36;
            if(_t36 != _t28) {
                _t44 = _t43 + _t41 - _a4;
                if(_t44 > _a12) {
                    _t44 = _a12;
                }
                _memmove(_t36, _t28, _t44);
            }
            _t32 = _t36 - 4 & -4;
             *(_t36 - 4 & -4) =  *_t46;
        }
        __esp =  &(__esp[7]);
        _pop(__ebx);
        _pop(__esi);
        return _t48;
    }
L15:
}

___chkstk_ms(
    _unknown_ __eax,                       // r0
    char _a4                               // _cfa_4
)
{// addr = 0x00403DC0
    _unknown_ __ecx;                       // r2
    intOrPtr* _t2;                         // _t2

    __eax = __eax;
    _t2 =  &_a4;
    if(__eax >= 4096) {
        do {
            _t2 = _t2 - 4096;
             *_t2 =  *_t2;
            __eax = __eax - 4096;
        } while(__eax > 4096);
    }
     *((intOrPtr*)(_t2 - __eax)) =  *((intOrPtr*)(_t2 - __eax));
    return __eax;
}

_stricoll()
{// addr = 0x00403DEC
    goto __imp___stricoll;
}

char* _strdup(char* __s)
{// addr = 0x00403DF4
    goto __imp___strdup;
}

int _wcstombs(char* __s, long* __pwcs, int __n)
{// addr = 0x00403DFC
    goto __imp__wcstombs;
}

int _vfprintf(struct _IO_FILE* fp, char* fmt0, _G_va_list vals)
{// addr = 0x00403E04
    goto __imp__vfprintf;
}

_tolower()
{// addr = 0x00403E0C
    goto __imp__tolower;
}

int _strlen(char* __s)
{// addr = 0x00403E14
    goto __imp__strlen;
}

int _strcoll(char* __s1, char* __s2)
{// addr = 0x00403E1C
    goto __imp__strcoll;
}

_setlocale()
{// addr = 0x00403E2C
    goto __imp__setlocale;
}

int _printf(char* format)
{// addr = 0x00403E34
    goto __imp__printf;
}

void* _memmove(void* __dest, void* __src, int __n)
{// addr = 0x00403E3C
    goto __imp__memmove;
}

void* _memcpy(void* __dest, void* __src, int __n)
{// addr = 0x00403E44
    goto __imp__memcpy;
}

int _mbstowcs(long* __pwcs, char* __s, int __n)
{// addr = 0x00403E4C
    goto __imp__mbstowcs;
}

void* _malloc(int __size)
{// addr = 0x00403E54
    goto __imp__malloc;
}

int _fwrite(void* src, int sz, int nitems, struct _IO_FILE* fp)
{// addr = 0x00403E5C
    goto __imp__fwrite;
}

void* _calloc(int __nmemb, int __size)
{// addr = 0x00403E64
    goto __imp__calloc;
}

void _abort()
{// addr = 0x00403E6C
    goto __imp__abort;
}

__setmode()
{// addr = 0x00403E74
    goto __imp___setmode;
}

__msize()
{// addr = 0x00403E7C
    goto __imp___msize;
}

__isctype()
{// addr = 0x00403E84
    goto __imp___isctype;
}

__fullpath()
{// addr = 0x00403E8C
    goto __imp___fullpath;
}

__errno()
{// addr = 0x00403E94
    goto __imp___errno;
}

__cexit()
{// addr = 0x00403E9C
    goto __imp___cexit;
}

___p__fmode()
{// addr = 0x00403EA4
    goto __imp____p__fmode;
}

___p__environ()
{// addr = 0x00403EAC
    goto __imp____p__environ;
}

___getmainargs()
{// addr = 0x00403EB4
    goto __imp____getmainargs;
}

_VirtualQuery@12()
{// addr = 0x00403EBC
    goto __imp__VirtualQuery;
}

_VirtualProtect@16()
{// addr = 0x00403EC4
    goto __imp__VirtualProtect;
}

_TlsGetValue@4()
{// addr = 0x00403ECC
    goto __imp__TlsGetValue;
}

_SetUnhandledExceptionFilter@4()
{// addr = 0x00403ED4
    goto __imp__SetUnhandledExceptionFilter;
}

_LoadLibraryA@4()
{// addr = 0x00403EDC
    goto __imp__LoadLibraryA;
}

_LeaveCriticalSection@4()
{// addr = 0x00403EE4
    goto __imp__LeaveCriticalSection;
}

_InitializeCriticalSection@4()
{// addr = 0x00403EEC
    goto __imp__InitializeCriticalSection;
}

_GetProcAddress@8()
{// addr = 0x00403EF4
    goto __imp__GetProcAddress;
}

_GetModuleHandleA@4()
{// addr = 0x00403EFC
    goto __imp__GetModuleHandleA;
}

_GetLastError@0()
{// addr = 0x00403F04
    goto __imp__GetLastError;
}

_GetCommandLineA@0()
{// addr = 0x00403F0C
    goto __imp__GetCommandLineA;
}

_FreeLibrary@4()
{// addr = 0x00403F14
    goto __imp__FreeLibrary;
}

_FindNextFileA@8()
{// addr = 0x00403F1C
    goto __imp__FindNextFileA;
}

_FindFirstFileA@8()
{// addr = 0x00403F24
    goto __imp__FindFirstFileA;
}

_FindClose@4()
{// addr = 0x00403F2C
    goto __imp__FindClose;
}

_ExitProcess@4()
{// addr = 0x00403F34
    goto __imp__ExitProcess;
}

_EnterCriticalSection@4()
{// addr = 0x00403F3C
    goto __imp__EnterCriticalSection;
}

_DeleteCriticalSection@4()
{// addr = 0x00403F44
    goto __imp__DeleteCriticalSection;
}

_DeleteCriticalSection@4()
{// addr = 0x00403F44
    goto __imp__DeleteCriticalSection;
}

// Statistics:
//     915 Register nodes
//    2104 Temporaries nodes
//      81 Casts
//     300 Statements
//     332 Labels
//     262 Gotos
//      78 Blocks
//    9518 Nodes
//      32 Assembly nodes
//      75 Unknown Types


Total time: 0 seconds.
